{type:"class",attributes:{"name":"Boolean","packageName":"qx.ui.progressive.renderer.table.cell","superClass":"qx.ui.progressive.renderer.table.cell.Icon","fullName":"qx.ui.progressive.renderer.table.cell.Boolean","type":"class"},children:[{type:"desc",attributes:{"text":"<p>Table Cell Boolean Renderer.  <span class=\"caps\">EXPERIMENTAL</span>!  <span class=\"caps\">INTERFACE</span> <span class=\"caps\">MAY</span> <span class=\"caps\">CHANGE</span>.</p>"}},{type:"constructor",children:[{type:"method",attributes:{"docFrom":"qx.ui.progressive.renderer.table.cell.Icon","overriddenFrom":"qx.ui.progressive.renderer.table.cell.Icon","isCtor":"true","name":"ctor"}}]},{type:"methods",children:[{type:"method",attributes:{"access":"protected","docFrom":"qx.ui.progressive.renderer.table.cell.Abstract","overriddenFrom":"qx.ui.progressive.renderer.table.cell.Icon","name":"_getCellStyle"},children:[{type:"params",children:[{type:"param",attributes:{"name":"cellInfo"}}]}]},{type:"method",attributes:{"access":"protected","docFrom":"qx.ui.progressive.renderer.table.cell.Icon","overriddenFrom":"qx.ui.progressive.renderer.table.cell.Icon","name":"_identifyImage"},children:[{type:"params",children:[{type:"param",attributes:{"name":"cellInfo"}}]}]},{type:"method",attributes:{"name":"getAllowToggle","fromProperty":"allowToggle"},children:[{type:"desc",attributes:{"text":"<p>Returns the (computed) value of the property <code>allowToggle</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #allowToggle}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>(Computed) value of <code>allowToggle</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"access":"protected","name":"initAllowToggle","fromProperty":"allowToggle"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>Initial value for property <code>allowToggle</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"desc",attributes:{"text":"<p>Calls the apply method and dispatches the change event of the property <code>allowToggle</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #allowToggle}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>the default value</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"name":"resetAllowToggle","fromProperty":"allowToggle"},children:[{type:"desc",attributes:{"text":"<p>Resets the user value of the property <code>allowToggle</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #allowToggle}.</p>"}},{type:"return",children:[{type:"types",children:[{type:"entry",attributes:{"type":"void"}}]}]}]},{type:"method",attributes:{"name":"setAllowToggle","fromProperty":"allowToggle"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>New value for property <code>allowToggle</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"desc",attributes:{"text":"<p>Sets the user value of the property <code>allowToggle</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #allowToggle}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>The unmodified incoming value.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]}]},{type:"properties",children:[{type:"property",attributes:{"defaultValue":"false","name":"allowToggle","propertyType":"new"},children:[{type:"desc",attributes:{"text":"<p>Whether to add code which will toggle the checkbox on/off.  (There is\nnot yet code here to generate an event when this occurs, so it&#8217;s not\nyet very useful.)</p>"}}]}]}]}