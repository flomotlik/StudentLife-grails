{type:"class",attributes:{"name":"TableHeading","packageName":"qx.ui.progressive.headfoot","superClass":"qx.ui.progressive.headfoot.Abstract","fullName":"qx.ui.progressive.headfoot.TableHeading","type":"class"},children:[{type:"desc",attributes:{"text":"<p>A header for a standard table.</p>"}},{type:"constructor",children:[{type:"method",attributes:{"overriddenFrom":"qx.ui.progressive.headfoot.Abstract","isCtor":"true","name":"ctor"},children:[{type:"params",children:[{type:"param",attributes:{"name":"columnWidths"},children:[{type:"desc",attributes:{"text":"<p>The set of widths, minimum widths, and maximum widths to be used for\n  each of the columns in the table.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"qx.ui.progressive.renderer.table.Widths"}}]}]},{type:"param",attributes:{"name":"labelArr"},children:[{type:"desc",attributes:{"text":"<p>Array of labels, one for each of the columns.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Array"}}]}]}]},{type:"return",children:[{type:"types",children:[{type:"entry",attributes:{"type":"Void"}}]}]}]}]},{type:"properties",children:[{type:"property",attributes:{"name":"appearance","docFrom":"qx.ui.core.Widget","defaultValue":"\"progressive-table-header\"","refine":"true","propertyType":"new","overriddenFrom":"qx.ui.core.Widget"}}]},{type:"methods",children:[{type:"method",attributes:{"access":"protected","name":"_resizeColumns"},children:[{type:"params",children:[{type:"param",attributes:{"name":"e"},children:[{type:"desc",attributes:{"text":"<p>Ignored.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"qx.event.type.Event"}}]}]}]},{type:"desc",attributes:{"text":"<p>Event handler for the &#8220;resize&#8221; event.  We recalculate and set the\nnew widths of each of our columns.</p>"}},{type:"return",children:[{type:"types",children:[{type:"entry",attributes:{"type":"Void"}}]}]}]},{type:"method",attributes:{"overriddenFrom":"qx.ui.core.Widget","name":"getLayoutChildren"},children:[{type:"desc",attributes:{"text":"<p>This method is required by the box layout. If returns an array of items\nto relayout.</p>"}}]},{type:"method",attributes:{"docFrom":"qx.ui.progressive.headfoot.Abstract","overriddenFrom":"qx.ui.progressive.headfoot.Abstract","name":"join"},children:[{type:"params",children:[{type:"param",attributes:{"name":"progressive"}}]}]}]}]}