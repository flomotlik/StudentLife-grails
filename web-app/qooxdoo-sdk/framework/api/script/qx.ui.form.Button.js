{type:"class",attributes:{"name":"Button","packageName":"qx.ui.form","mixins":"qx.ui.core.MExecutable,qx.ui.form.MFormElement","superClass":"qx.ui.basic.Atom","childClasses":"qx.ui.form.MenuButton,qx.ui.form.RadioButton,qx.ui.form.RepeatButton,qx.ui.toolbar.Button","fullName":"qx.ui.form.Button","type":"class","interfaces":"qx.ui.form.IFormElement,qx.ui.form.IExecutable"},children:[{type:"desc",attributes:{"text":"<p>A Button widget which supports various states and allows it to be used\nvia the mouse and the keyboard.</p>\n\n<p>If the user presses the button by clicking on it, or the <code>Enter</code> or\n<code>Space</code> keys, the button fires an {@link qx.ui.core.MExecutable#execute} event.</p>\n\n<p>If the {@link qx.ui.core.MExecutable#command} property is set, the\ncommand is executed as well.</p>\n\n<p><strong>Example</strong></p>\n\n<p>Here is a little example of how to use the widget.</p>\n\n<pre class=\"javascript\">\n  var button = new qx.ui.form.Button(\"Hello World\");\n\n  button.addListener(\"execute\", function(e) {\n    alert(\"Button was clicked\");\n  }, this);\n\n  this.getRoot.add(button);\n</pre>\n\n<p>This example creates a button with the label &#8220;Hello World&#8221; and attaches an\nevent listener to the {@link #execute} event.</p>\n\n<p><strong>External Documentation</strong></p>\n\n<a href=\"http://qooxdoo.org/documentation/0.8/widget/button\" target=\"_blank\">\nDocumentation of this widget in the qooxdoo wiki.</a>"}},{type:"constructor",children:[{type:"method",attributes:{"overriddenFrom":"qx.ui.basic.Atom","isCtor":"true","name":"ctor"},children:[{type:"params",children:[{type:"param",attributes:{"name":"label"},children:[{type:"desc",attributes:{"text":"<p>label of the atom</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"String"}}]}]},{type:"param",attributes:{"defaultValue":"null","name":"icon"},children:[{type:"desc",attributes:{"text":"<p>Icon <span class=\"caps\">URL</span> of the atom</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"String"}}]}]},{type:"param",attributes:{"defaultValue":"null","name":"command"},children:[{type:"desc",attributes:{"text":"<p>Command instance to connect with</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"qx.event.Command"}}]}]}]}]}]},{type:"events",children:[{type:"event",attributes:{"name":"changeValue"},children:[{type:"desc",attributes:{"text":"<p>The old value change event.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"qx.event.type.Data"}}]},{type:"deprecated"}]}]},{type:"properties",children:[{type:"property",attributes:{"name":"appearance","docFrom":"qx.ui.core.Widget","defaultValue":"\"button\"","refine":"true","propertyType":"new","overriddenFrom":"qx.ui.basic.Atom"}},{type:"property",attributes:{"name":"focusable","docFrom":"qx.ui.core.Widget","defaultValue":"true","refine":"true","propertyType":"new","overriddenFrom":"qx.ui.core.Widget"}}]},{type:"methods",children:[{type:"method",attributes:{"access":"protected","name":"_onKeyDown"},children:[{type:"params",children:[{type:"param",attributes:{"name":"e"},children:[{type:"desc",attributes:{"text":"<p>Key event</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Event"}}]}]}]},{type:"desc",attributes:{"text":"<p>Listener method for &#8220;keydown&#8221; event.</p>\n\n<p>Removes &#8220;abandoned&#8221; and adds &#8220;pressed&#8221; state\nfor the keys &#8220;Enter&#8221; or &#8220;Space&#8221;</p>"}},{type:"return",children:[{type:"types",children:[{type:"entry",attributes:{"type":"void"}}]}]}]},{type:"method",attributes:{"access":"protected","name":"_onKeyUp"},children:[{type:"params",children:[{type:"param",attributes:{"name":"e"},children:[{type:"desc",attributes:{"text":"<p>Key event</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Event"}}]}]}]},{type:"desc",attributes:{"text":"<p>Listener method for &#8220;keyup&#8221; event.</p>\n\n<p>Removes &#8220;abandoned&#8221; and &#8220;pressed&#8221; state (if &#8220;pressed&#8221; state is set)\nfor the keys &#8220;Enter&#8221; or &#8220;Space&#8221;</p>"}},{type:"return",children:[{type:"types",children:[{type:"entry",attributes:{"type":"void"}}]}]}]},{type:"method",attributes:{"access":"protected","name":"_onMouseDown"},children:[{type:"params",children:[{type:"param",attributes:{"name":"e"},children:[{type:"desc",attributes:{"text":"<p>Mouse event</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Event"}}]}]}]},{type:"desc",attributes:{"text":"<p>Listener method for &#8220;mousedown&#8221; event\n<ul>\n<li>Removes &#8220;abandoned&#8221; state</li>\n<li>Adds &#8220;pressed&#8221; state</li>\n</ul></p>"}},{type:"return",children:[{type:"types",children:[{type:"entry",attributes:{"type":"void"}}]}]}]},{type:"method",attributes:{"access":"protected","name":"_onMouseOut"},children:[{type:"params",children:[{type:"param",attributes:{"name":"e"},children:[{type:"desc",attributes:{"text":"<p>Mouse event</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Event"}}]}]}]},{type:"desc",attributes:{"text":"<p>Listener method for &#8220;mouseout&#8221; event\n<ul>\n<li>Removes &#8220;hovered&#8221; state</li>\n<li>Adds &#8220;abandoned&#8221; and removes &#8220;pressed&#8221; state (if &#8220;pressed&#8221; state is set)</li>\n</ul></p>"}},{type:"return",children:[{type:"types",children:[{type:"entry",attributes:{"type":"void"}}]}]}]},{type:"method",attributes:{"access":"protected","name":"_onMouseOver"},children:[{type:"params",children:[{type:"param",attributes:{"name":"e"},children:[{type:"desc",attributes:{"text":"<p>Mouse event</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Event"}}]}]}]},{type:"desc",attributes:{"text":"<p>Listener method for &#8220;mouseover&#8221; event\n<ul>\n<li>Adds state &#8220;hovered&#8221;</li>\n<li>Removes &#8220;abandoned&#8221; and adds &#8220;pressed&#8221; state (if &#8220;abandoned&#8221; state is set)</li>\n</ul></p>"}},{type:"return",children:[{type:"types",children:[{type:"entry",attributes:{"type":"void"}}]}]}]},{type:"method",attributes:{"access":"protected","name":"_onMouseUp"},children:[{type:"params",children:[{type:"param",attributes:{"name":"e"},children:[{type:"desc",attributes:{"text":"<p>Mouse event</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Event"}}]}]}]},{type:"desc",attributes:{"text":"<p>Listener method for &#8220;mouseup&#8221; event\n <ul>\n <li>Removes &#8220;pressed&#8221; state (if set)</li>\n <li>Removes &#8220;abandoned&#8221; state (if set)</li>\n <li>Adds &#8220;hovered&#8221; state (if &#8220;abandoned&#8221; state is not set)</li>\n</ul></p>"}},{type:"return",children:[{type:"types",children:[{type:"entry",attributes:{"type":"void"}}]}]}]},{type:"method",attributes:{"docFrom":"qx.core.Object","overriddenFrom":"qx.core.Object","name":"addListener"},children:[{type:"params",children:[{type:"param",attributes:{"name":"type"}},{type:"param",attributes:{"name":"listener"}},{type:"param",attributes:{"name":"self"}},{type:"param",attributes:{"name":"capture"}}]}]},{type:"method",attributes:{"name":"getValue"},children:[{type:"deprecated"},{type:"desc",attributes:{"text":"<p>Old get method for the value property.</p>"}}]},{type:"method",attributes:{"name":"press"},children:[{type:"desc",attributes:{"text":"<p>Manually press the button</p>"}}]},{type:"method",attributes:{"name":"release"},children:[{type:"desc",attributes:{"text":"<p>Manually release the button</p>"}}]},{type:"method",attributes:{"overriddenFrom":"qx.core.Object","name":"reset"},children:[{type:"desc",attributes:{"text":"<p>Completely reset the button (remove all states)</p>"}}]},{type:"method",attributes:{"name":"resetValue"},children:[{type:"deprecated"},{type:"desc",attributes:{"text":"<p>Old reset method for the value property.</p>"}}]},{type:"method",attributes:{"name":"setValue"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>The value of the label.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"String"}}]}]}]},{type:"deprecated"},{type:"desc",attributes:{"text":"<p>Old set method for the value property.</p>"}}]}]}]}