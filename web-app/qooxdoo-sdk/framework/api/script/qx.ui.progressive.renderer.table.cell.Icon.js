{type:"class",attributes:{"isAbstract":"true","name":"Icon","packageName":"qx.ui.progressive.renderer.table.cell","superClass":"qx.ui.progressive.renderer.table.cell.Abstract","childClasses":"qx.ui.progressive.renderer.table.cell.Boolean,qx.ui.progressive.renderer.table.cell.Image","fullName":"qx.ui.progressive.renderer.table.cell.Icon","type":"class"},children:[{type:"desc",attributes:{"text":"<p>Abstract Icon cell renderer.  <span class=\"caps\">EXPERIMENTAL</span>!  <span class=\"caps\">INTERFACE</span> <span class=\"caps\">MAY</span> <span class=\"caps\">CHANGE</span>.</p>"}},{type:"constructor",children:[{type:"method",attributes:{"overriddenFrom":"qx.core.Object","isCtor":"true","name":"ctor"},children:[{type:"desc",attributes:{"text":"<p>Create a new instance of an Icon cell renderer</p>"}}]}]},{type:"methods",children:[{type:"method",attributes:{"access":"private","name":"__getImageData"},children:[{type:"params",children:[{type:"param",attributes:{"name":"cellInfo"},children:[{type:"desc",attributes:{"text":"<p>Information about the cell being renderered, including:\n  <ul>\n    <li>state</li>\n    <li>rowDiv</li>\n    <li>stylesheet</li>\n    <li>element</li>\n    <li>dataIndex</li>\n    <li>cellData</li>\n    <li>height</li>\n  </ul></p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Map"}}]}]}]},{type:"desc",attributes:{"text":"<p>Obtain the image data (url, tooltip) that&#8217;s appropriate for this cell</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>See {@link #_identifyImage}</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Map"}}]}]}]},{type:"method",attributes:{"access":"protected","docFrom":"qx.ui.progressive.renderer.table.cell.Abstract","overriddenFrom":"qx.ui.progressive.renderer.table.cell.Abstract","name":"_getCellStyle"},children:[{type:"params",children:[{type:"param",attributes:{"name":"cellInfo"}}]}]},{type:"method",attributes:{"access":"protected","docFrom":"qx.ui.progressive.renderer.table.cell.Abstract","overriddenFrom":"qx.ui.progressive.renderer.table.cell.Abstract","name":"_getContentHtml"},children:[{type:"params",children:[{type:"param",attributes:{"name":"cellInfo"}}]}]},{type:"method",attributes:{"access":"protected","name":"_identifyImage"},children:[{type:"params",children:[{type:"param",attributes:{"name":"cellInfo"},children:[{type:"desc",attributes:{"text":"<p>Information about the cell being renderered, including:\n  <ul>\n    <li>state</li>\n    <li>rowDiv</li>\n    <li>stylesheet</li>\n    <li>element</li>\n    <li>dataIndex</li>\n    <li>cellData</li>\n    <li>height</li>\n  </ul></p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Map"}}]}]}]},{type:"desc",attributes:{"text":"<p>Identify the image to be displayed in the cell.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>The returned map should contain at least the <i>url</i> field, but\n  may contain any others of these:</p>\n\n<dl>\n    <dt>\n      url\n    </dt>\n    <dd>\n      The URL of the image to be displayed\n    </dd>\n\n<dt>\n      imageWidth\n    </dt>\n    <dd>\n      The width at which the image should be displayed\n    </dd>\n\n<dt>\n      imageHeight\n    </dt>\n    <dd>\n      The height at which the image should be displayed\n    </dd>\n\n<dt>\n      extras\n    </dt>\n    <dd>\n      Any extra attributes to be include in the 'image' tag.\n    </dd>\n  </dl>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Map"}}]}]}]},{type:"method",attributes:{"name":"getBlankImage"},children:[{type:"desc",attributes:{"text":"<p>Retrieve the <span class=\"caps\">URI</span> for a blank image</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>The <span class=\"caps\">URI</span> of the blank image.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"String"}}]}]}]}]}]}