{type:"class",attributes:{"name":"TestCase","packageName":"qx.dev.unit","mixins":"qx.core.MAssert","superClass":"qx.core.Object","fullName":"qx.dev.unit.TestCase","type":"class"},children:[{type:"desc",attributes:{"text":"<p>Base class for all unit tests.</p>"}},{type:"methods",children:[{type:"method",attributes:{"name":"getTestFunc","fromProperty":"testFunc"},children:[{type:"desc",attributes:{"text":"<p>Returns the (computed) value of the property <code>testFunc</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #testFunc}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>(Computed) value of <code>testFunc</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"name":"getTestResult","fromProperty":"testResult"},children:[{type:"desc",attributes:{"text":"<p>Returns the (computed) value of the property <code>testResult</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #testResult}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>(Computed) value of <code>testResult</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"access":"protected","name":"initTestFunc","fromProperty":"testFunc"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>Initial value for property <code>testFunc</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"desc",attributes:{"text":"<p>Calls the apply method and dispatches the change event of the property <code>testFunc</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #testFunc}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>the default value</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"access":"protected","name":"initTestResult","fromProperty":"testResult"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>Initial value for property <code>testResult</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"desc",attributes:{"text":"<p>Calls the apply method and dispatches the change event of the property <code>testResult</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #testResult}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>the default value</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"name":"isDebugOn"},children:[{type:"desc",attributes:{"text":"<p>Whether If debugging code is enabled. (i.e. the setting\n<code>qx.debug</code> has the value <code>on</code>.)</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>Whether debugging is enabled</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Boolean"}}]}]}]},{type:"method",attributes:{"name":"resetTestFunc","fromProperty":"testFunc"},children:[{type:"desc",attributes:{"text":"<p>Resets the user value of the property <code>testFunc</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #testFunc}.</p>"}},{type:"return",children:[{type:"types",children:[{type:"entry",attributes:{"type":"void"}}]}]}]},{type:"method",attributes:{"name":"resetTestResult","fromProperty":"testResult"},children:[{type:"desc",attributes:{"text":"<p>Resets the user value of the property <code>testResult</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #testResult}.</p>"}},{type:"return",children:[{type:"types",children:[{type:"entry",attributes:{"type":"void"}}]}]}]},{type:"method",attributes:{"name":"resume"},children:[{type:"params",children:[{type:"param",attributes:{"defaultValue":"false","name":"deferredFunction"},children:[{type:"desc",attributes:{"text":"<p>Function to run</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Function"}}]}]},{type:"param",attributes:{"defaultValue":"false","name":"self"},children:[{type:"desc",attributes:{"text":"<p>reference to the &#8216;this&#8217; variable inside the\ncallback</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Object"}}]}]}]},{type:"desc",attributes:{"text":"<p>Cancel a timeout started with <code>wait()</code> and run the given\nfunction. Used for asynchronous tests, e.g. in a listener&#8217;s callback\nfunction.</p>"}}]},{type:"method",attributes:{"name":"setTestFunc","fromProperty":"testFunc"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>New value for property <code>testFunc</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"desc",attributes:{"text":"<p>Sets the user value of the property <code>testFunc</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #testFunc}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>The unmodified incoming value.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"name":"setTestResult","fromProperty":"testResult"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>New value for property <code>testResult</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"desc",attributes:{"text":"<p>Sets the user value of the property <code>testResult</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #testResult}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>The unmodified incoming value.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"name":"wait"},children:[{type:"params",children:[{type:"param",attributes:{"defaultValue":"5000","name":"delay"},children:[{type:"desc",attributes:{"text":"<p>Amount of time in milliseconds to wait.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Integer"}}]}]},{type:"param",attributes:{"defaultValue":"false","name":"deferredFunction"},children:[{type:"desc",attributes:{"text":"<p>Optional function to run after\ntimeout has expired.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Function"}}]}]}]},{type:"desc",attributes:{"text":"<p>Instruct the test to wait. Used for asynchronous tests.</p>"}}]}]},{type:"properties",children:[{type:"property",attributes:{"defaultValue":"null","name":"testFunc","propertyType":"new"},children:[{type:"desc",attributes:{"text":"<p>The test currently running</p>"}}]},{type:"property",attributes:{"defaultValue":"null","name":"testResult","propertyType":"new"},children:[{type:"desc",attributes:{"text":"<p>The TestResult instance that runs the test</p>"}}]}]}]}