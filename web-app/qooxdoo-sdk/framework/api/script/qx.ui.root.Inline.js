{type:"class",attributes:{"name":"Inline","packageName":"qx.ui.root","mixins":"qx.ui.core.MLayoutHandling","superClass":"qx.ui.root.Abstract","fullName":"qx.ui.root.Inline","type":"class"},children:[{type:"desc",attributes:{"text":"<p>This classes could be used to insert qooxdoo islands into existing\nweb pages. You can use the isles to place any qooxdoo powered widgets\ninside a layout made using traditional <span class=\"caps\">HTML</span> markup and <span class=\"caps\">CSS</span>.</p>\n\n<p>The size of the widget in each dimension can either be determined by the\nsize hint of the inline&#8217;s children or by the size of the root <span class=\"caps\">DOM</span> element. If\n<code>dynamicX</code>/<code>dynamicY</code> is true the width/height of the <span class=\"caps\">DOM</span>\nelement is used.</p>\n\n<p>This class uses {@link qx.ui.layout.Basic} as default layout. The layout\ncan be changed using the {@link #setLayout} method.</p>\n\n<p>To position popups and tooltips please have a look at {@link qx.ui.layout.Page}.</p>"}},{type:"constructor",children:[{type:"method",attributes:{"overriddenFrom":"qx.ui.root.Abstract","isCtor":"true","name":"ctor"},children:[{type:"params",children:[{type:"param",attributes:{"name":"el"},children:[{type:"desc",attributes:{"text":"<p><span class=\"caps\">DOM</span> element to use as isle for qooxdoo content. Please\n   note that existing content gets removed on the first layout flush.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Element"}}]}]},{type:"param",attributes:{"name":"dynamicX"},children:[{type:"desc",attributes:{"text":"<p>If <code>true</code> the widget&#8217;s width is\n   determined by the <span class=\"caps\">DOM</span> element&#8217;s width. Otherwise the children&#8217;s size hint\n   is used.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Boolean"}}]}]},{type:"param",attributes:{"name":"dynamicY"},children:[{type:"desc",attributes:{"text":"<p>If <code>true</code> the widget&#8217;s height is\n   determined by the <span class=\"caps\">DOM</span> element&#8217;s height. Otherwise the children&#8217;s size hint\n   is used.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Boolean"}}]}]}]}]}]},{type:"methods",children:[{type:"method",attributes:{"access":"private","name":"__initDynamic"},children:[{type:"desc",attributes:{"text":"<p>Initialize resize listener for the root <span class=\"caps\">DOM</span> element</p>"}}]},{type:"method",attributes:{"access":"protected","docFrom":"qx.ui.core.LayoutItem","overriddenFrom":"qx.ui.core.Widget","name":"_computeSizeHint"}},{type:"method",attributes:{"access":"protected","docFrom":"qx.ui.core.Widget","overriddenFrom":"qx.ui.core.Widget","name":"_createContainerElement"}},{type:"method",attributes:{"access":"protected","name":"_onResize"},children:[{type:"params",children:[{type:"param",attributes:{"name":"e"},children:[{type:"desc",attributes:{"text":"<p>Event object</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"qx.event.type.Event"}}]}]}]},{type:"desc",attributes:{"text":"<p>Listener for the element&#8217;s resize event</p>"}}]}]}]}