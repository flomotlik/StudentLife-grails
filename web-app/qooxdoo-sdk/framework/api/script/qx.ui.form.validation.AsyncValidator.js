{type:"class",attributes:{"name":"AsyncValidator","packageName":"qx.ui.form.validation","superClass":"qx.core.Object","fullName":"qx.ui.form.validation.AsyncValidator","type":"class"},children:[{type:"desc",attributes:{"text":"<h3>EXPERIMENTAL!</h3>\n\n<p>This class is responsible for validation in all asynchronous cases and\nshould always be used with {@link qx.ui.form.validation.Manager}.</p>\n\n<p>It acts like a wrapper for asynchron validation functions. These\nvalidation function must be set in the constructor. The form manager will\ninvoke the validation and the validator function will be called with two\narguments:\n<ul>\n <li>asyncValidator: A reference to the corresponding validator.</li>\n <li>value: The value of the assigned input field.</li>\n</ul>\nThese two parameters are needed to set the validation status of the current\nvalidator. {@link #setValid} is responsible for doing that.</p>\n\n<p><strong>Warning:</strong> Instances of this class can only be used with one input\nfield at a time. Multi usage is not supported!</p>"}},{type:"constructor",children:[{type:"method",attributes:{"overriddenFrom":"qx.core.Object","isCtor":"true","name":"ctor"},children:[{type:"params",children:[{type:"param",attributes:{"name":"validator"},children:[{type:"desc",attributes:{"text":"<p>The validator function, which has to be\n  asynchronous.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Function"}}]}]}]}]}]},{type:"methods",children:[{type:"method",attributes:{"name":"setValid"},children:[{type:"params",children:[{type:"param",attributes:{"name":"valid"},children:[{type:"desc",attributes:{"text":"<p>The boolean state of the validation.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"boolean"}}]}]},{type:"param",attributes:{"defaultValue":"","name":"message"},children:[{type:"desc",attributes:{"text":"<p>The invalidMessage of the validation.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"String"}}]}]}]},{type:"desc",attributes:{"text":"<p>This method should be called within the asynchron callback to tell the\nvalidator the result of the validation.</p>"}}]},{type:"method",attributes:{"access":"internal","isInternal":"true","name":"validate"},children:[{type:"params",children:[{type:"param",attributes:{"name":"item"},children:[{type:"desc",attributes:{"text":"<p>The form item which should be validated.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"qx.ui.core.Widget"}}]}]},{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>The value of the form item.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]},{type:"param",attributes:{"name":"manager"},children:[{type:"desc",attributes:{"text":"<p>A reference to the form\n  manager.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"qx.ui.form.validation.Manager"}}]}]}]},{type:"desc",attributes:{"text":"<p>The validate function should only be called by\n{@link qx.ui.form.validation.Manager}.</p>\n\n<p>It stores the given information and calls the validation function set in\nthe constructor. The method is used for form fields only. Validating a\nform itself will be invokes with {@link #validateForm}.</p>"}}]},{type:"method",attributes:{"access":"internal","isInternal":"true","name":"validateForm"},children:[{type:"params",children:[{type:"param",attributes:{"name":"items"},children:[{type:"desc",attributes:{"text":"<p>All form items of the form manager.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"qx.ui.core.Widget","dimensions":"1"}}]}]},{type:"param",attributes:{"name":"manager"},children:[{type:"desc",attributes:{"text":"<p>A reference to the form\n  manager.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"qx.ui.form.validation.Manager"}}]}]}]},{type:"desc",attributes:{"text":"<p>The validateForm function should only be called by\n{@link qx.ui.form.validation.Manager}.</p>\n\n<p>It stores the given information and calls the validation function set in\nthe constructor. The method is used for forms only. Validating a\nform item will be invokes with {@link #validate}.</p>"}}]}]}]}