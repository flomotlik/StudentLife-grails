{type:"class",attributes:{"name":"AbstractBackground","packageName":"qx.ui.virtual.layer","superClass":"qx.ui.virtual.layer.Abstract","childClasses":"qx.ui.virtual.layer.Column,qx.ui.virtual.layer.Row","fullName":"qx.ui.virtual.layer.AbstractBackground","type":"class"},children:[{type:"desc",attributes:{"text":"<p><span class=\"caps\">EXPERIMENTAL</span>!</p>\n\n<p>Abstract base class for the {@link Row} and {@link Column} layers.</p>"}},{type:"constructor",children:[{type:"method",attributes:{"overriddenFrom":"qx.ui.virtual.layer.Abstract","isCtor":"true","name":"ctor"},children:[{type:"params",children:[{type:"param",attributes:{"defaultValue":"null","name":"colorEven"},children:[{type:"desc",attributes:{"text":"<p>color for even indexes</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Color"}}]}]},{type:"param",attributes:{"defaultValue":"null","name":"colorOdd"},children:[{type:"desc",attributes:{"text":"<p>color for odd indexes</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Color"}}]}]}]}]}]},{type:"methods",children:[{type:"method",attributes:{"access":"protected","apply":"qx.ui.virtual.layer.AbstractBackground#colorEven","name":"_applyColorEven"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>new value of the property</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Color"}}]}]},{type:"param",attributes:{"name":"old"},children:[{type:"desc",attributes:{"text":"<p>previous value of the property (null if it was not yet set).</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Color"}}]}]}]},{type:"desc",attributes:{"text":"<p>Applies changes of the property value of the property <code>colorEven</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #_applyColorEven}.</p>"}}]},{type:"method",attributes:{"access":"protected","apply":"qx.ui.virtual.layer.AbstractBackground#colorOdd","name":"_applyColorOdd"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>new value of the property</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Color"}}]}]},{type:"param",attributes:{"name":"old"},children:[{type:"desc",attributes:{"text":"<p>previous value of the property (null if it was not yet set).</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Color"}}]}]}]},{type:"desc",attributes:{"text":"<p>Applies changes of the property value of the property <code>colorOdd</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #_applyColorOdd}.</p>"}}]},{type:"method",attributes:{"name":"clearCustomColors"},children:[{type:"desc",attributes:{"text":"<p>Clear all colors set using {@link #setColor}.</p>"}}]},{type:"method",attributes:{"name":"getColor"},children:[{type:"params",children:[{type:"param",attributes:{"name":"index"},children:[{type:"desc",attributes:{"text":"<p>The index to get the color for.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Integer"}}]}]}]},{type:"desc",attributes:{"text":"<p>Get the color at the given index</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>The color at the given index</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Color"}}]}]}]},{type:"method",attributes:{"name":"getColorEven","fromProperty":"colorEven"},children:[{type:"desc",attributes:{"text":"<p>Returns the (computed) value of the property <code>colorEven</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #colorEven}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>(Computed) value of <code>colorEven</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"name":"getColorOdd","fromProperty":"colorOdd"},children:[{type:"desc",attributes:{"text":"<p>Returns the (computed) value of the property <code>colorOdd</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #colorOdd}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>(Computed) value of <code>colorOdd</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"overriddenFrom":"qx.ui.core.Widget","name":"getDecorator"},children:[{type:"params",children:[{type:"param",attributes:{"name":"index"},children:[{type:"desc",attributes:{"text":"<p>The index to get the decorator for.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Integer"}}]}]}]},{type:"desc",attributes:{"text":"<p>Get the decorator at the given index</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>The decorator at the given index</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Decorator"}}]}]}]},{type:"method",attributes:{"access":"protected","name":"initColorEven","fromProperty":"colorEven"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>Initial value for property <code>colorEven</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"desc",attributes:{"text":"<p>Calls the apply method and dispatches the change event of the property <code>colorEven</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #colorEven}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>the default value</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"access":"protected","name":"initColorOdd","fromProperty":"colorOdd"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>Initial value for property <code>colorOdd</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"desc",attributes:{"text":"<p>Calls the apply method and dispatches the change event of the property <code>colorOdd</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #colorOdd}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>the default value</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"name":"resetColorEven","fromProperty":"colorEven"},children:[{type:"desc",attributes:{"text":"<p>Resets the user value of the property <code>colorEven</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #colorEven}.</p>"}},{type:"return",children:[{type:"types",children:[{type:"entry",attributes:{"type":"void"}}]}]}]},{type:"method",attributes:{"name":"resetColorOdd","fromProperty":"colorOdd"},children:[{type:"desc",attributes:{"text":"<p>Resets the user value of the property <code>colorOdd</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #colorOdd}.</p>"}},{type:"return",children:[{type:"types",children:[{type:"entry",attributes:{"type":"void"}}]}]}]},{type:"method",attributes:{"name":"setColor"},children:[{type:"params",children:[{type:"param",attributes:{"name":"index"},children:[{type:"desc",attributes:{"text":"<p>Index to set the color for</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Integer"}}]}]},{type:"param",attributes:{"name":"color"},children:[{type:"desc",attributes:{"text":"<p>the color to set. A value of <code>null</code>\n   will reset the color.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Color"}},{type:"entry",attributes:{"type":"null"}}]}]}]},{type:"desc",attributes:{"text":"<p>Sets the color for the given index</p>"}}]},{type:"method",attributes:{"name":"setColorEven","fromProperty":"colorEven"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>New value for property <code>colorEven</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"desc",attributes:{"text":"<p>Sets the user value of the property <code>colorEven</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #colorEven}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>The unmodified incoming value.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"name":"setColorOdd","fromProperty":"colorOdd"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>New value for property <code>colorOdd</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"desc",attributes:{"text":"<p>Sets the user value of the property <code>colorOdd</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #colorOdd}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>The unmodified incoming value.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"overriddenFrom":"qx.ui.core.Widget","name":"setDecorator"},children:[{type:"params",children:[{type:"param",attributes:{"name":"index"},children:[{type:"desc",attributes:{"text":"<p>Index to set the color for</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Integer"}}]}]},{type:"param",attributes:{"name":"decorator"},children:[{type:"desc",attributes:{"text":"<p>the decorator to set. A value of\n   <code>null</code> will reset the decorator.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Decorator"}},{type:"entry",attributes:{"type":"null"}}]}]}]},{type:"desc",attributes:{"text":"<p>Sets the decorator for the given index</p>"}}]}]},{type:"properties",children:[{type:"property",attributes:{"name":"colorEven","allowNull":"true","propertyType":"new","apply":"_applyColorEven","check":"Color","themeable":"true"},children:[{type:"desc",attributes:{"text":"<p>color for event indexes</p>"}}]},{type:"property",attributes:{"name":"colorOdd","allowNull":"true","propertyType":"new","apply":"_applyColorOdd","check":"Color","themeable":"true"},children:[{type:"desc",attributes:{"text":"<p>color for odd indexes</p>"}}]}]}]}