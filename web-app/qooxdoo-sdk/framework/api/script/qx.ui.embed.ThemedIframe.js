{type:"class",attributes:{"name":"ThemedIframe","packageName":"qx.ui.embed","superClass":"qx.ui.embed.AbstractIframe","fullName":"qx.ui.embed.ThemedIframe","type":"class"},children:[{type:"desc",attributes:{"text":"<p>Container widget for internal frames (iframes) with qooxdoo scroll bar and\nsize hint support.</p>\n\n<p>An iframe can display any <span class=\"caps\">HTML</span> page inside the widget. Note that custom\nscroll bars do only work if the iframe&#8217;s source points to the same domain\nas the application.</p>\n\n<p><strong>Example</strong></p>\n\n<p>Here is a little example of how to use the widget:</p>\n\n<pre class=\"javascript\">\nvar document = this.getRoot();\nvar iframe = new qx.ui.embed.ThemedIframe(\"frame.html\");\ndocument.add(iframe);\n</pre>\n\n<p><strong>External Documentation</strong></p>\n\n<a href=\"http://qooxdoo.org/documentation/0.8/widget/themediframe\" target=\"_blank\">\nDocumentation of this widget in the qooxdoo wiki.</a>"}},{type:"constructor",children:[{type:"method",attributes:{"docFrom":"qx.ui.embed.AbstractIframe","overriddenFrom":"qx.ui.embed.AbstractIframe","isCtor":"true","name":"ctor"},children:[{type:"params",children:[{type:"param",attributes:{"name":"source"}}]}]}]},{type:"methods",children:[{type:"method",attributes:{"access":"protected","name":"_addWheelListener"},children:[{type:"desc",attributes:{"text":"<p>Attach mouse wheel listener to the iframe</p>"}}]},{type:"method",attributes:{"access":"protected","name":"_configureScrollbar"},children:[{type:"params",children:[{type:"param",attributes:{"name":"scrollbarId"},children:[{type:"desc",attributes:{"text":"<p>child control id of the scrollbar to\n  configure</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"String"}}]}]},{type:"param",attributes:{"name":"show"},children:[{type:"desc",attributes:{"text":"<p>whether the scrollbar should be visible</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Boolean"}}]}]},{type:"param",attributes:{"name":"containerSize"},children:[{type:"desc",attributes:{"text":"<p>size of the container widget</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Integer"}}]}]},{type:"param",attributes:{"name":"contentSize"},children:[{type:"desc",attributes:{"text":"<p>size of the iframe&#8217;s document</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Integer"}}]}]}]},{type:"desc",attributes:{"text":"<p>Configures the given scollbar</p>"}}]},{type:"method",attributes:{"access":"protected","docFrom":"qx.ui.core.Widget","overriddenFrom":"qx.ui.core.Widget","name":"_createChildControlImpl"},children:[{type:"params",children:[{type:"param",attributes:{"name":"id"}}]}]},{type:"method",attributes:{"access":"protected","name":"_disableScollbars"},children:[{type:"desc",attributes:{"text":"<p>Hide all scrollbars and stop observing the iframe document</p>"}}]},{type:"method",attributes:{"access":"protected","docFrom":"qx.ui.embed.AbstractIframe","overriddenFrom":"qx.ui.embed.AbstractIframe","name":"_getIframeElement"}},{type:"method",attributes:{"access":"protected","name":"_getIframeSize"},children:[{type:"desc",attributes:{"text":"<p>Compute the size of the iframe body</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>A map with the body size or <code>null</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Object"}},{type:"entry",attributes:{"type":"null"}}]}]}]},{type:"method",attributes:{"access":"protected","name":"_onIframeLoad"},children:[{type:"desc",attributes:{"text":"<p>Event handler for the iframe&#8217;s load event</p>"}}]},{type:"method",attributes:{"access":"protected","name":"_onIframeObserverInterval"},children:[{type:"desc",attributes:{"text":"<p>Event handler, which is called periodically to update the scroll bars</p>"}}]},{type:"method",attributes:{"access":"protected","name":"_onIframeResize"},children:[{type:"desc",attributes:{"text":"<p>Event handler for resize event of the iframe widget.</p>"}}]},{type:"method",attributes:{"access":"protected","name":"_onMouseWheel"},children:[{type:"params",children:[{type:"param",attributes:{"name":"e"},children:[{type:"desc",attributes:{"text":"<p>Mouse event</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"qx.event.type.Mouse"}}]}]}]},{type:"desc",attributes:{"text":"<p>Mouse wheel event handler</p>"}}]},{type:"method",attributes:{"access":"protected","name":"_onScrollBarX"},children:[{type:"params",children:[{type:"param",attributes:{"name":"e"},children:[{type:"desc",attributes:{"text":"<p>The scroll event object</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"qx.event.type.Data"}}]}]}]},{type:"desc",attributes:{"text":"<p>Event handler for the scroll event of the horizontal scrollbar</p>"}}]},{type:"method",attributes:{"access":"protected","name":"_onScrollBarY"},children:[{type:"params",children:[{type:"param",attributes:{"name":"e"},children:[{type:"desc",attributes:{"text":"<p>The scroll event object</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"qx.event.type.Data"}}]}]}]},{type:"desc",attributes:{"text":"<p>Event handler for the scroll event of the vertical scrollbar</p>"}}]},{type:"method",attributes:{"access":"protected","name":"_preventIframeScrolling"},children:[{type:"desc",attributes:{"text":"<p>Try to hide native scrollbars in the iframe</p>"}}]},{type:"method",attributes:{"access":"protected","name":"_startIframeObserver"},children:[{type:"desc",attributes:{"text":"<p>Start observing size changes of the iframe document</p>"}}]},{type:"method",attributes:{"access":"protected","name":"_stopIframeObserver"},children:[{type:"desc",attributes:{"text":"<p>Stop observing size changes of the iframe document</p>"}}]},{type:"method",attributes:{"access":"protected","name":"_updateCornerWidget"},children:[{type:"desc",attributes:{"text":"<p>Update visibility of the corner widget based on the visibility of the\nscrollbars</p>"}}]},{type:"method",attributes:{"access":"protected","apply":"qx.ui.embed.ThemedIframe#scrollbarY","name":"_updateScrollbars"},children:[{type:"desc",attributes:{"text":"<p>Recompute scrollbar visibility and positions based on the iframe&#8217;s\ndocument size</p>"}}]},{type:"method",attributes:{"name":"getScrollbarX","fromProperty":"scrollbarX"},children:[{type:"desc",attributes:{"text":"<p>Returns the (computed) value of the property <code>scrollbarX</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #scrollbarX}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>(Computed) value of <code>scrollbarX</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"name":"getScrollbarY","fromProperty":"scrollbarY"},children:[{type:"desc",attributes:{"text":"<p>Returns the (computed) value of the property <code>scrollbarY</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #scrollbarY}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>(Computed) value of <code>scrollbarY</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"access":"protected","name":"initScrollbarX","fromProperty":"scrollbarX"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>Initial value for property <code>scrollbarX</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"desc",attributes:{"text":"<p>Calls the apply method and dispatches the change event of the property <code>scrollbarX</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #scrollbarX}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>the default value</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"access":"protected","name":"initScrollbarY","fromProperty":"scrollbarY"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>Initial value for property <code>scrollbarY</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"desc",attributes:{"text":"<p>Calls the apply method and dispatches the change event of the property <code>scrollbarY</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #scrollbarY}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>the default value</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"name":"resetScrollbar","fromProperty":"scrollbar"},children:[{type:"desc",attributes:{"text":"<p>Resets the user value of the property <code>scrollbar</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #scrollbar}.</p>"}},{type:"return",children:[{type:"types",children:[{type:"entry",attributes:{"type":"void"}}]}]}]},{type:"method",attributes:{"name":"resetScrollbarX","fromProperty":"scrollbarX"},children:[{type:"desc",attributes:{"text":"<p>Resets the user value of the property <code>scrollbarX</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #scrollbarX}.</p>"}},{type:"return",children:[{type:"types",children:[{type:"entry",attributes:{"type":"void"}}]}]}]},{type:"method",attributes:{"name":"resetScrollbarY","fromProperty":"scrollbarY"},children:[{type:"desc",attributes:{"text":"<p>Resets the user value of the property <code>scrollbarY</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #scrollbarY}.</p>"}},{type:"return",children:[{type:"types",children:[{type:"entry",attributes:{"type":"void"}}]}]}]},{type:"method",attributes:{"name":"scrollToX"},children:[{type:"params",children:[{type:"param",attributes:{"name":"x"},children:[{type:"desc",attributes:{"text":"<p>The vertical position to scroll to.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Integer"}}]}]}]},{type:"desc",attributes:{"text":"<p>Scrolls the iframe&#8217;s content to the given left coordinate</p>"}}]},{type:"method",attributes:{"name":"scrollToY"},children:[{type:"params",children:[{type:"param",attributes:{"name":"y"},children:[{type:"desc",attributes:{"text":"<p>The horizontal position to scroll to.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Integer"}}]}]}]},{type:"desc",attributes:{"text":"<p>Scrolls the iframe&#8217;s content to the given top coordinate</p>"}}]},{type:"method",attributes:{"name":"setScrollbar","fromProperty":"scrollbar"},children:[{type:"params",children:[{type:"param",attributes:{"name":"scrollbarX"},children:[{type:"desc",attributes:{"text":"<p>Sets the value of the property {@link #scrollbarX}.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]},{type:"param",attributes:{"name":"scrollbarY"},children:[{type:"desc",attributes:{"text":"<p>Sets the value of the property {@link #scrollbarY}.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"desc",attributes:{"text":"<p>Sets the values of the property group <code>scrollbar</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #scrollbar}.</p>"}}]},{type:"method",attributes:{"name":"setScrollbarX","fromProperty":"scrollbarX"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>New value for property <code>scrollbarX</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"desc",attributes:{"text":"<p>Sets the user value of the property <code>scrollbarX</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #scrollbarX}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>The unmodified incoming value.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"name":"setScrollbarY","fromProperty":"scrollbarY"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>New value for property <code>scrollbarY</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"desc",attributes:{"text":"<p>Sets the user value of the property <code>scrollbarY</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #scrollbarY}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>The unmodified incoming value.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]}]},{type:"properties",children:[{type:"property",attributes:{"name":"appearance","docFrom":"qx.ui.core.Widget","defaultValue":"\"scrollarea\"","refine":"true","propertyType":"new","overriddenFrom":"qx.ui.core.Widget"}},{type:"property",attributes:{"group":"\"scrollbarX\",\"scrollbarY\"","name":"scrollbar","propertyType":"group"},children:[{type:"desc",attributes:{"text":"<p>Group property, to set the overflow of both scroll bars.</p>"}}]},{type:"property",attributes:{"possibleValues":"\"auto\",\"on\",\"off\"","name":"scrollbarX","defaultValue":"\"auto\"","propertyType":"new","apply":"_updateScrollbars","themeable":"true"},children:[{type:"desc",attributes:{"text":"<p>The policy, when the horizontal scrollbar should be shown.\n<ul>\n  <li><b>auto</b>: Show scrollbar on demand</li>\n  <li><b>on</b>: Always show the scrollbar</li>\n  <li><b>off</b>: Never show the scrollbar</li>\n</ul></p>"}}]},{type:"property",attributes:{"possibleValues":"\"auto\",\"on\",\"off\"","name":"scrollbarY","defaultValue":"\"auto\"","propertyType":"new","apply":"_updateScrollbars","themeable":"true"},children:[{type:"desc",attributes:{"text":"<p>The policy, when the horizontal scrollbar should be shown.\n<ul>\n  <li><b>auto</b>: Show scrollbar on demand</li>\n  <li><b>on</b>: Always show the scrollbar</li>\n  <li><b>off</b>: Never show the scrollbar</li>\n</ul></p>"}}]}]}]}