{type:"class",attributes:{"name":"Tree","packageName":"qx.data.controller","mixins":"qx.data.controller.MSelection","superClass":"qx.core.Object","fullName":"qx.data.controller.Tree","type":"class"},children:[{type:"desc",attributes:{"text":"<p><span class=\"caps\">EXPERIMENTAL</span>!</p>\n\n<h2>Tree Controller</h2>\n\n<p><strong>General idea</strong></p>\n\n<p>The tree controller is the controller made for the {@link qx.ui.tree.Tree}\nwidget in qooxdoo. Therefore, it is responsible for creating and adding the\ntree folders to the tree given as target.</p>\n\n<p><strong>Features</strong></p>\n\n<ul>\n<li>Synchronize the model and the target</li>\n<li>Label and icon are bindable</li>\n<li>Takes care of the selection</li>\n<li>Passes on the options used by the bindings</li>\n</ul>\n\n<p><strong>Usage</strong></p>\n\n<p>As model, you can use every qooxdoo widget structure having one property,\nwhich is a data array holding the children of the current node. There can\nbe as many additional as you like.\nYou need to specify a model, a target, a child path and a label path to\nmake the controller work.</p>\n\n<p><strong>Cross reference</strong></p>\n\n<ul>\n<li>If you want to bind single values, use {@link qx.data.controller.Object}</li>\n<li>If you want to bind a list like widget, use {@link qx.data.controller.List}</li>\n<li>If you want to bin a form widget, use {@link qx.data.controller.Form}</li>\n</ul>"}},{type:"constructor",children:[{type:"method",attributes:{"overriddenFrom":"qx.core.Object","isCtor":"true","name":"ctor"},children:[{type:"params",children:[{type:"param",attributes:{"defaultValue":"null","name":"model"},children:[{type:"desc",attributes:{"text":"<p>The root element of the model, which holds\n  the data.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"qx.core.Object"}}]}]},{type:"param",attributes:{"defaultValue":"null","name":"target"},children:[{type:"desc",attributes:{"text":"<p>The target widgets which should be a tree.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"qx.ui.tree.Tree"}}]}]},{type:"param",attributes:{"defaultValue":"null","name":"childPath"},children:[{type:"desc",attributes:{"text":"<p>The name of the property in the model, which\n  holds the data array containing the children.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"String"}}]}]},{type:"param",attributes:{"defaultValue":"null","name":"labelPath"},children:[{type:"desc",attributes:{"text":"<p>The name of the property in the model,\n  which holds the value to be displayed as the label of the tree items.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"String"}}]}]}]}]}]},{type:"events",children:[{type:"event",attributes:{"name":"changeModel"},children:[{type:"desc",attributes:{"text":"Fired on change of the property {@link #model}."}},{type:"types",children:[{type:"entry",attributes:{"type":"qx.event.type.Data"}}]}]},{type:"event",attributes:{"name":"changeTarget"},children:[{type:"desc",attributes:{"text":"Fired on change of the property {@link #target}."}},{type:"types",children:[{type:"entry",attributes:{"type":"qx.event.type.Data"}}]}]}]},{type:"methods",children:[{type:"method",attributes:{"access":"private","name":"__addBinding"},children:[{type:"params",children:[{type:"param",attributes:{"name":"modelNode"},children:[{type:"desc",attributes:{"text":"<p>The model node holding the data.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"qx.core.Object"}}]}]},{type:"param",attributes:{"name":"treeNode"},children:[{type:"desc",attributes:{"text":"<p>The corresponding tree folder\n  to the model node.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"qx.ui.tree.TreeFolder"}}]}]}]},{type:"desc",attributes:{"text":"<p>Internal helper method adding the right bindings from the given\nmodelNode to the given treeNode.</p>"}}]},{type:"method",attributes:{"access":"private","name":"__buildTree"},children:[{type:"desc",attributes:{"text":"<p>Internal helper function to build up the tree corresponding to the data\nstored in the model. This function creates the root node and hands the\nrecursive creation of all subtrees to the {#__updateTreeChildren}\nfunction.</p>"}}]},{type:"method",attributes:{"access":"private","name":"__changeChildrenArray"},children:[{type:"params",children:[{type:"param",attributes:{"name":"e"},children:[{type:"desc",attributes:{"text":"<p>Change event for the children property.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"qx.event.Type.Data"}}]}]}]},{type:"desc",attributes:{"text":"<p>Handler function taking care of the changes of the children array itself.</p>"}}]},{type:"method",attributes:{"access":"private","name":"__changeModelChildren"},children:[{type:"params",children:[{type:"param",attributes:{"name":"ev"},children:[{type:"desc",attributes:{"text":"<p>The changeLength event of a data array.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"qx.event.type.Event"}}]}]}]},{type:"desc",attributes:{"text":"<p>Handler function handling the change of a length of a children array.\nThis method invokes a rebuild of the corresponding subtree.</p>"}}]},{type:"method",attributes:{"access":"private","name":"__emptyTarget"},children:[{type:"desc",attributes:{"text":"<p>Removes all folders and bindings for the current set target.</p>"}}]},{type:"method",attributes:{"access":"private","name":"__removeAllFolders"},children:[{type:"params",children:[{type:"param",attributes:{"name":"node"},children:[{type:"desc",attributes:{"text":"<p>The used tree folder.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"qx.ui.tree.AbstractTreeItem"}}]}]}]},{type:"desc",attributes:{"text":"<p>Removes all child folders of the given tree node. Also removes all\nbindings for the removed folders.</p>"}}]},{type:"method",attributes:{"access":"private","name":"__removeBinding"},children:[{type:"params",children:[{type:"param",attributes:{"name":"modelNode"},children:[{type:"desc",attributes:{"text":"<p>the model node for which the bindings\n  should be removed.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"qx.core.Object"}}]}]}]},{type:"desc",attributes:{"text":"<p>Internal helper method for removing bindings for a given model node.</p>"}}]},{type:"method",attributes:{"access":"private","name":"__removeFolder"},children:[{type:"params",children:[{type:"param",attributes:{"name":"treeFolder"},children:[{type:"desc",attributes:{"text":"<p>The folder to remove.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"qx.ui.tree.AbstractTreeItem"}}]}]},{type:"param",attributes:{"name":"rootNode"},children:[{type:"desc",attributes:{"text":"<p>The folder holding the\n  treeFolder.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"qx.ui.tree.AbstractTreeItem"}}]}]}]},{type:"desc",attributes:{"text":"<p>Internal helper method removing the given folder form the given root\nnode. All set bindings will be removed and the old tree folder will be\ndestroyed.</p>"}}]},{type:"method",attributes:{"access":"private","name":"__renewBindings"},children:[{type:"desc",attributes:{"text":"<p>Helper method renewing all bindings with the currently saved options and\npaths.</p>"}}]},{type:"method",attributes:{"access":"private","name":"__updateTreeChildren"},children:[{type:"params",children:[{type:"param",attributes:{"name":"rootNode"},children:[{type:"desc",attributes:{"text":"<p>The tree folder to add the new\n  created subtree.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"qx.ui.tree.TreeFolder"}}]}]},{type:"param",attributes:{"name":"modelNode"},children:[{type:"desc",attributes:{"text":"<p>The model nodes which represent the\n  data in the current subtree.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"qx.core.Object"}}]}]}]},{type:"desc",attributes:{"text":"<p>Main method building up the tree folders corresponding to the given\nmodel node. The new created subtree will be added to the given tree node.</p>"}}]},{type:"method",attributes:{"access":"protected","apply":"qx.data.controller.Tree#childPath","name":"_applyChildPath"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>The new path to the children property.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"String"}},{type:"entry",attributes:{"type":"null"}}]}]},{type:"param",attributes:{"name":"old"},children:[{type:"desc",attributes:{"text":"<p>The old path to the children property.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"String"}},{type:"entry",attributes:{"type":"null"}}]}]}]},{type:"desc",attributes:{"text":"<p>Apply-method which will be called after the child path had been\nchanged. This method invoke a new building of the tree.</p>"}}]},{type:"method",attributes:{"access":"protected","apply":"qx.data.controller.Tree#delegate","name":"_applyDelegate"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>The new delegate.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"qx.core.Object"}},{type:"entry",attributes:{"type":"null"}}]}]},{type:"param",attributes:{"name":"old"},children:[{type:"desc",attributes:{"text":"<p>The old delegate.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"qx.core.Object"}},{type:"entry",attributes:{"type":"null"}}]}]}]},{type:"desc",attributes:{"text":"<p>If a new delegate is set, it applies the stored configuration for the\ntree folder to the already created folders once.</p>"}}]},{type:"method",attributes:{"access":"protected","apply":"qx.data.controller.Tree#iconOptions","name":"_applyIconOptions"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>The new options map.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Map"}},{type:"entry",attributes:{"type":"null"}}]}]},{type:"param",attributes:{"name":"old"},children:[{type:"desc",attributes:{"text":"<p>The old options map.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Map"}},{type:"entry",attributes:{"type":"null"}}]}]}]},{type:"desc",attributes:{"text":"<p>Apply-method which will be called after the icon options had been\nchanged. This method will invoke a renewing of all bindings.</p>"}}]},{type:"method",attributes:{"access":"protected","apply":"qx.data.controller.Tree#iconPath","name":"_applyIconPath"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>The new path to the icon property.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"String"}},{type:"entry",attributes:{"type":"null"}}]}]},{type:"param",attributes:{"name":"old"},children:[{type:"desc",attributes:{"text":"<p>The old path or the icon property.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"String"}},{type:"entry",attributes:{"type":"null"}}]}]}]},{type:"desc",attributes:{"text":"<p>Apply-method which will be called after the icon path had been\nchanged. This method invoke a new building of the tree.</p>"}}]},{type:"method",attributes:{"access":"protected","apply":"qx.data.controller.Tree#labelOptions","name":"_applyLabelOptions"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>The new options map.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Map"}},{type:"entry",attributes:{"type":"null"}}]}]},{type:"param",attributes:{"name":"old"},children:[{type:"desc",attributes:{"text":"<p>The old options map.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Map"}},{type:"entry",attributes:{"type":"null"}}]}]}]},{type:"desc",attributes:{"text":"<p>Apply-method which will be called after the label options had been\nchanged. This method will invoke a renewing of all bindings.</p>"}}]},{type:"method",attributes:{"access":"protected","apply":"qx.data.controller.Tree#labelPath","name":"_applyLabelPath"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>The new path to the label property.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"String"}},{type:"entry",attributes:{"type":"null"}}]}]},{type:"param",attributes:{"name":"old"},children:[{type:"desc",attributes:{"text":"<p>The old path of the label property.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"String"}},{type:"entry",attributes:{"type":"null"}}]}]}]},{type:"desc",attributes:{"text":"<p>Apply-method which will be called after the label path had been\nchanged. This method invoke a new building of the tree.</p>"}}]},{type:"method",attributes:{"access":"protected","apply":"qx.data.controller.Tree#model","name":"_applyModel"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>The new tree.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"qx.core.Object"}},{type:"entry",attributes:{"type":"null"}}]}]},{type:"param",attributes:{"name":"old"},children:[{type:"desc",attributes:{"text":"<p>The old tree.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"qx.core.Object"}},{type:"entry",attributes:{"type":"null"}}]}]}]},{type:"desc",attributes:{"text":"<p>Apply-method which will be called after the model had been\nchanged. This method invoke a new building of the tree.</p>"}}]},{type:"method",attributes:{"access":"protected","apply":"qx.data.controller.Tree#target","name":"_applyTarget"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>The new tree.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"qx.ui.tree.Tree"}},{type:"entry",attributes:{"type":"null"}}]}]},{type:"param",attributes:{"name":"old"},children:[{type:"desc",attributes:{"text":"<p>The old tree.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"qx.ui.tree.Tree"}},{type:"entry",attributes:{"type":"null"}}]}]}]},{type:"desc",attributes:{"text":"<p>Apply-method which will be called after the target had been\nchanged. This method will clean up the old tree and will initially\nbuild up the new tree containing the data from the model.</p>"}}]},{type:"method",attributes:{"access":"protected","name":"_createItem"},children:[{type:"desc",attributes:{"text":"<p>Creates a TreeFolder and delegates the configure method if a delegate is\nset and the needed function (configureItem) is available.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>The created and configured TreeFolder.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"qx.ui.tree.AbstractTreeItem"}}]}]}]},{type:"method",attributes:{"access":"protected","name":"_setBindItem"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>The new delegate.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Object"}}]}]},{type:"param",attributes:{"name":"old"},children:[{type:"desc",attributes:{"text":"<p>The old delegate.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Object"}}]}]}]},{type:"desc",attributes:{"text":"<p>Helper method for applying the delegate It checks if a bindItem\nis set end invokes the initial process to apply the given function.</p>"}}]},{type:"method",attributes:{"access":"protected","name":"_setConfigureItem"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>The new delegate.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Object"}}]}]},{type:"param",attributes:{"name":"old"},children:[{type:"desc",attributes:{"text":"<p>The old delegate.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Object"}}]}]}]},{type:"desc",attributes:{"text":"<p>Helper method for applying the delegate It checks if a configureItem\nis set end invokes the initial process to apply the given function.</p>"}}]},{type:"method",attributes:{"access":"protected","name":"_setCreateItem"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>The new delegate.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Object"}}]}]},{type:"param",attributes:{"name":"old"},children:[{type:"desc",attributes:{"text":"<p>The old delegate.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Object"}}]}]}]},{type:"desc",attributes:{"text":"<p>Helper method for applying the delegate. It checks if a createItem\nis set and invokes the initial process to apply the given function.</p>"}}]},{type:"method",attributes:{"name":"bindProperty"},children:[{type:"params",children:[{type:"param",attributes:{"name":"sourcePath"},children:[{type:"desc",attributes:{"text":"<p>The path to the property in the model.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"String"}},{type:"entry",attributes:{"type":"null"}}]}]},{type:"param",attributes:{"name":"targetPath"},children:[{type:"desc",attributes:{"text":"<p>The name of the property in the target\n  widget.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"String"}}]}]},{type:"param",attributes:{"name":"options"},children:[{type:"desc",attributes:{"text":"<p>The options to use for the binding.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Map"}},{type:"entry",attributes:{"type":"null"}}]}]},{type:"param",attributes:{"name":"targetWidget"},children:[{type:"desc",attributes:{"text":"<p>The target widget.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"qx.ui.tree.AbstractTreeItem"}}]}]},{type:"param",attributes:{"name":"modelNode"},children:[{type:"desc",attributes:{"text":"<p>The model node which should be bound to the target.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"desc",attributes:{"text":"<p>Helper-Method for binding a given property from the model to the target\nwidget.\nThis method should only be called in the\n{@link qx.data.controller.IControllerDelegate#bindItem} function\nimplemented by the {@link #delegate} property.</p>"}}]},{type:"method",attributes:{"name":"getChildPath","fromProperty":"childPath"},children:[{type:"desc",attributes:{"text":"<p>Returns the (computed) value of the property <code>childPath</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #childPath}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>(Computed) value of <code>childPath</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"name":"getDelegate","fromProperty":"delegate"},children:[{type:"desc",attributes:{"text":"<p>Returns the (computed) value of the property <code>delegate</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #delegate}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>(Computed) value of <code>delegate</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"name":"getIconOptions","fromProperty":"iconOptions"},children:[{type:"desc",attributes:{"text":"<p>Returns the (computed) value of the property <code>iconOptions</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #iconOptions}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>(Computed) value of <code>iconOptions</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"name":"getIconPath","fromProperty":"iconPath"},children:[{type:"desc",attributes:{"text":"<p>Returns the (computed) value of the property <code>iconPath</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #iconPath}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>(Computed) value of <code>iconPath</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"name":"getLabelOptions","fromProperty":"labelOptions"},children:[{type:"desc",attributes:{"text":"<p>Returns the (computed) value of the property <code>labelOptions</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #labelOptions}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>(Computed) value of <code>labelOptions</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"name":"getLabelPath","fromProperty":"labelPath"},children:[{type:"desc",attributes:{"text":"<p>Returns the (computed) value of the property <code>labelPath</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #labelPath}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>(Computed) value of <code>labelPath</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"name":"getModel","fromProperty":"model"},children:[{type:"desc",attributes:{"text":"<p>Returns the (computed) value of the property <code>model</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #model}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>(Computed) value of <code>model</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"name":"getTarget","fromProperty":"target"},children:[{type:"desc",attributes:{"text":"<p>Returns the (computed) value of the property <code>target</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #target}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>(Computed) value of <code>target</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"access":"protected","name":"initChildPath","fromProperty":"childPath"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>Initial value for property <code>childPath</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"desc",attributes:{"text":"<p>Calls the apply method and dispatches the change event of the property <code>childPath</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #childPath}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>the default value</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"access":"protected","name":"initDelegate","fromProperty":"delegate"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>Initial value for property <code>delegate</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"desc",attributes:{"text":"<p>Calls the apply method and dispatches the change event of the property <code>delegate</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #delegate}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>the default value</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"access":"protected","name":"initIconOptions","fromProperty":"iconOptions"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>Initial value for property <code>iconOptions</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"desc",attributes:{"text":"<p>Calls the apply method and dispatches the change event of the property <code>iconOptions</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #iconOptions}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>the default value</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"access":"protected","name":"initIconPath","fromProperty":"iconPath"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>Initial value for property <code>iconPath</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"desc",attributes:{"text":"<p>Calls the apply method and dispatches the change event of the property <code>iconPath</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #iconPath}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>the default value</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"access":"protected","name":"initLabelOptions","fromProperty":"labelOptions"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>Initial value for property <code>labelOptions</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"desc",attributes:{"text":"<p>Calls the apply method and dispatches the change event of the property <code>labelOptions</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #labelOptions}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>the default value</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"access":"protected","name":"initLabelPath","fromProperty":"labelPath"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>Initial value for property <code>labelPath</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"desc",attributes:{"text":"<p>Calls the apply method and dispatches the change event of the property <code>labelPath</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #labelPath}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>the default value</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"access":"protected","name":"initModel","fromProperty":"model"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>Initial value for property <code>model</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"desc",attributes:{"text":"<p>Calls the apply method and dispatches the change event of the property <code>model</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #model}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>the default value</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"access":"protected","name":"initTarget","fromProperty":"target"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>Initial value for property <code>target</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"desc",attributes:{"text":"<p>Calls the apply method and dispatches the change event of the property <code>target</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #target}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>the default value</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"name":"resetChildPath","fromProperty":"childPath"},children:[{type:"desc",attributes:{"text":"<p>Resets the user value of the property <code>childPath</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #childPath}.</p>"}},{type:"return",children:[{type:"types",children:[{type:"entry",attributes:{"type":"void"}}]}]}]},{type:"method",attributes:{"name":"resetDelegate","fromProperty":"delegate"},children:[{type:"desc",attributes:{"text":"<p>Resets the user value of the property <code>delegate</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #delegate}.</p>"}},{type:"return",children:[{type:"types",children:[{type:"entry",attributes:{"type":"void"}}]}]}]},{type:"method",attributes:{"name":"resetIconOptions","fromProperty":"iconOptions"},children:[{type:"desc",attributes:{"text":"<p>Resets the user value of the property <code>iconOptions</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #iconOptions}.</p>"}},{type:"return",children:[{type:"types",children:[{type:"entry",attributes:{"type":"void"}}]}]}]},{type:"method",attributes:{"name":"resetIconPath","fromProperty":"iconPath"},children:[{type:"desc",attributes:{"text":"<p>Resets the user value of the property <code>iconPath</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #iconPath}.</p>"}},{type:"return",children:[{type:"types",children:[{type:"entry",attributes:{"type":"void"}}]}]}]},{type:"method",attributes:{"name":"resetLabelOptions","fromProperty":"labelOptions"},children:[{type:"desc",attributes:{"text":"<p>Resets the user value of the property <code>labelOptions</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #labelOptions}.</p>"}},{type:"return",children:[{type:"types",children:[{type:"entry",attributes:{"type":"void"}}]}]}]},{type:"method",attributes:{"name":"resetLabelPath","fromProperty":"labelPath"},children:[{type:"desc",attributes:{"text":"<p>Resets the user value of the property <code>labelPath</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #labelPath}.</p>"}},{type:"return",children:[{type:"types",children:[{type:"entry",attributes:{"type":"void"}}]}]}]},{type:"method",attributes:{"name":"resetModel","fromProperty":"model"},children:[{type:"desc",attributes:{"text":"<p>Resets the user value of the property <code>model</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #model}.</p>"}},{type:"return",children:[{type:"types",children:[{type:"entry",attributes:{"type":"void"}}]}]}]},{type:"method",attributes:{"name":"resetTarget","fromProperty":"target"},children:[{type:"desc",attributes:{"text":"<p>Resets the user value of the property <code>target</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #target}.</p>"}},{type:"return",children:[{type:"types",children:[{type:"entry",attributes:{"type":"void"}}]}]}]},{type:"method",attributes:{"name":"setChildPath","fromProperty":"childPath"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>New value for property <code>childPath</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"desc",attributes:{"text":"<p>Sets the user value of the property <code>childPath</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #childPath}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>The unmodified incoming value.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"name":"setDelegate","fromProperty":"delegate"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>New value for property <code>delegate</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"desc",attributes:{"text":"<p>Sets the user value of the property <code>delegate</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #delegate}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>The unmodified incoming value.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"name":"setIconOptions","fromProperty":"iconOptions"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>New value for property <code>iconOptions</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"desc",attributes:{"text":"<p>Sets the user value of the property <code>iconOptions</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #iconOptions}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>The unmodified incoming value.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"name":"setIconPath","fromProperty":"iconPath"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>New value for property <code>iconPath</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"desc",attributes:{"text":"<p>Sets the user value of the property <code>iconPath</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #iconPath}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>The unmodified incoming value.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"name":"setLabelOptions","fromProperty":"labelOptions"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>New value for property <code>labelOptions</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"desc",attributes:{"text":"<p>Sets the user value of the property <code>labelOptions</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #labelOptions}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>The unmodified incoming value.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"name":"setLabelPath","fromProperty":"labelPath"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>New value for property <code>labelPath</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"desc",attributes:{"text":"<p>Sets the user value of the property <code>labelPath</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #labelPath}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>The unmodified incoming value.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"name":"setModel","fromProperty":"model"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>New value for property <code>model</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"desc",attributes:{"text":"<p>Sets the user value of the property <code>model</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #model}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>The unmodified incoming value.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"name":"setTarget","fromProperty":"target"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>New value for property <code>target</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"desc",attributes:{"text":"<p>Sets the user value of the property <code>target</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #target}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>The unmodified incoming value.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]}]},{type:"properties",children:[{type:"property",attributes:{"check":"String","allowNull":"true","propertyType":"new","name":"childPath","apply":"_applyChildPath"},children:[{type:"desc",attributes:{"text":"<p>The name of the property, where the children are stored in the model.</p>"}}]},{type:"property",attributes:{"allowNull":"true","defaultValue":"null","propertyType":"new","name":"delegate","apply":"_applyDelegate"},children:[{type:"desc",attributes:{"text":"<p>Delegation object, which can have one ore more function defined by the\n{@link #IControllerDelegate} interface.</p>"}}]},{type:"property",attributes:{"allowNull":"true","propertyType":"new","name":"iconOptions","apply":"_applyIconOptions"},children:[{type:"desc",attributes:{"text":"<p>A map containing the options for the icon binding. The possible keys\ncan be found in the {@link qx.data.SingleValueBinding} documentation.</p>"}}]},{type:"property",attributes:{"check":"String","allowNull":"true","propertyType":"new","name":"iconPath","apply":"_applyIconPath"},children:[{type:"desc",attributes:{"text":"<p>The name of the property, where the source for the tree folders icon\nis stored in the model classes.</p>"}}]},{type:"property",attributes:{"allowNull":"true","propertyType":"new","name":"labelOptions","apply":"_applyLabelOptions"},children:[{type:"desc",attributes:{"text":"<p>A map containing the options for the label binding. The possible keys\ncan be found in the {@link qx.data.SingleValueBinding} documentation.</p>"}}]},{type:"property",attributes:{"check":"String","allowNull":"true","propertyType":"new","name":"labelPath","apply":"_applyLabelPath"},children:[{type:"desc",attributes:{"text":"<p>The name of the property, where the value for the tree folders label\nis stored in the model classes.</p>"}}]},{type:"property",attributes:{"name":"model","check":"qx.core.Object","allowNull":"true","propertyType":"new","apply":"_applyModel","event":"changeModel"},children:[{type:"desc",attributes:{"text":"<p>The root element of the data.</p>"}}]},{type:"property",attributes:{"apply":"_applyTarget","defaultValue":"null","propertyType":"new","name":"target","event":"changeTarget"},children:[{type:"desc",attributes:{"text":"<p>The tree to bind the data to.</p>"}}]}]}]}