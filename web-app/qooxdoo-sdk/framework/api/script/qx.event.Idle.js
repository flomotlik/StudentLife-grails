{type:"class",attributes:{"name":"Idle","packageName":"qx.event","superClass":"qx.core.Object","isSingleton":"true","fullName":"qx.event.Idle","type":"class"},children:[{type:"desc",attributes:{"text":"<p>A generic singleton that fires an &#8220;interval&#8221; event all 100 miliseconds. It\ncan be used whenever one needs to run code periodically. The main purpose of\nthis class is reduce the number of timers.</p>"}},{type:"constructor",children:[{type:"method",attributes:{"docFrom":"qx.core.Object","overriddenFrom":"qx.core.Object","isCtor":"true","name":"ctor"}}]},{type:"events",children:[{type:"event",attributes:{"name":"interval"},children:[{type:"desc",attributes:{"text":"<p>This event if fired each time the interval time has elapsed</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"qx.event.type.Event"}}]}]}]},{type:"methods",children:[{type:"method",attributes:{"access":"protected","apply":"qx.event.Idle#timeoutInterval","name":"_applyTimeoutInterval"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>new value of the property</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Number"}}]}]},{type:"param",attributes:{"name":"old"},children:[{type:"desc",attributes:{"text":"<p>previous value of the property (null if it was not yet set).</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Number"}}]}]}]},{type:"desc",attributes:{"text":"<p>Applies changes of the property value of the property <code>timeoutInterval</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #_applyTimeoutInterval}.</p>"}}]},{type:"method",attributes:{"access":"protected","name":"_onInterval"},children:[{type:"desc",attributes:{"text":"<p>Fires an &#8220;interval&#8221; event</p>"}}]},{type:"method",attributes:{"name":"getTimeoutInterval","fromProperty":"timeoutInterval"},children:[{type:"desc",attributes:{"text":"<p>Returns the (computed) value of the property <code>timeoutInterval</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #timeoutInterval}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>(Computed) value of <code>timeoutInterval</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"access":"protected","name":"initTimeoutInterval","fromProperty":"timeoutInterval"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>Initial value for property <code>timeoutInterval</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"desc",attributes:{"text":"<p>Calls the apply method and dispatches the change event of the property <code>timeoutInterval</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #timeoutInterval}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>the default value</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"name":"resetTimeoutInterval","fromProperty":"timeoutInterval"},children:[{type:"desc",attributes:{"text":"<p>Resets the user value of the property <code>timeoutInterval</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #timeoutInterval}.</p>"}},{type:"return",children:[{type:"types",children:[{type:"entry",attributes:{"type":"void"}}]}]}]},{type:"method",attributes:{"name":"setTimeoutInterval","fromProperty":"timeoutInterval"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>New value for property <code>timeoutInterval</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"desc",attributes:{"text":"<p>Sets the user value of the property <code>timeoutInterval</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #timeoutInterval}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>The unmodified incoming value.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]}]},{type:"properties",children:[{type:"property",attributes:{"apply":"_applyTimeoutInterval","defaultValue":"100","propertyType":"new","name":"timeoutInterval","check":"Number"},children:[{type:"desc",attributes:{"text":"<p>Interval for the timer, which periodically fires the &#8220;interval&#8221; event,\nin milliseconds.</p>"}}]}]},{type:"methods-static",children:[{type:"method",attributes:{"isStatic":"true","name":"getInstance"},children:[{type:"desc",attributes:{"text":"<p>Returns a singleton instance of this class. On the first call the class\nis instantiated by calling the constructor with no arguments. All following\ncalls will return this instance.</p>\n\n<p>This method has been added by setting the &#8220;type&#8221; key in the class definition\n({@link qx.Class#define}) to &#8220;singleton&#8221;.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>The singleton instance of this class.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"qx.event.Idle"}}]}]}]}]}]}