{type:"class",attributes:{"name":"IListData","packageName":"qx.data","implementations":"qx.data.Array","fullName":"qx.data.IListData","type":"interface"},children:[{type:"desc",attributes:{"text":"<p><span class=\"caps\">EXPERIMENTAL</span>!</p>\n\n<p>This interface defines a data structure compatible with the data binding\ncontrollers.\nIt defines a minimum of functionality which the controller need to work.</p>"}},{type:"events",children:[{type:"event",attributes:{"name":"change"},children:[{type:"desc",attributes:{"text":"<p>The change event which will be fired if there is a change in the data\nstructure.The data should contain a map with three key value pairs:\n<li>start: The start index of the change.</li>\n<li>end: The end index of the change.</li>\n<li>type: The type of the change as a String. This can be &#8216;add&#8217;,\n&#8216;remove&#8217; or &#8216;order&#8217;</li>\n<li>item: The item which has been changed.</li></p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"qx.event.type.Data"}}]}]},{type:"event",attributes:{"name":"changeLength"},children:[{type:"desc",attributes:{"text":"<p>The changeLength event will be fired every time the length of the\ndata structure changes.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"qx.event.type.Event"}}]}]}]},{type:"methods",children:[{type:"method",attributes:{"name":"contains"},children:[{type:"params",children:[{type:"param",attributes:{"name":"item"},children:[{type:"desc",attributes:{"text":"<p>The item which is possibly in the data structure.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"desc",attributes:{"text":"<p>Check if the given item is in the current data structure.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>true, if the array contains the given item.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"boolean"}}]}]}]},{type:"method",attributes:{"name":"getItem"},children:[{type:"params",children:[{type:"param",attributes:{"name":"index"},children:[{type:"desc",attributes:{"text":"<p>The index requested of the data element.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Number"}}]}]}]},{type:"desc",attributes:{"text":"<p>Returns the item at the given index</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>The element at the given index.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"name":"getLength"},children:[{type:"desc",attributes:{"text":"<p>Returns the current length of the data structure.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>The current length of the data structure.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Number"}}]}]}]},{type:"method",attributes:{"name":"setItem"},children:[{type:"params",children:[{type:"param",attributes:{"name":"index"},children:[{type:"desc",attributes:{"text":"<p>The index of the data element.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Number"}}]}]},{type:"param",attributes:{"name":"item"},children:[{type:"desc",attributes:{"text":"<p>The new item to set.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"desc",attributes:{"text":"<p>Sets the given item at the given position in the data structure. A\nchange event has to be fired.</p>"}}]},{type:"method",attributes:{"name":"splice"},children:[{type:"params",children:[{type:"param",attributes:{"name":"startIndex"},children:[{type:"desc",attributes:{"text":"<p>The index where the splice should start</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Integer"}}]}]},{type:"param",attributes:{"name":"amount"},children:[{type:"desc",attributes:{"text":"<p>Defines number of element which will be removed\n  at the given position.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Integer"}}]}]},{type:"param",attributes:{"name":"varargs"},children:[{type:"desc",attributes:{"text":"<p>All following parameters will be added at the given\n  position to the array.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"desc",attributes:{"text":"<p>Method to remove and add new element to the data. For every remove or\nadd a change event should be fired.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>An array containing the removed elements.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"qx.data.Array"}}]}]}]},{type:"method",attributes:{"name":"toArray"},children:[{type:"desc",attributes:{"text":"<p>Returns the list data as native array.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>The native array.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Array"}}]}]}]}]}]}