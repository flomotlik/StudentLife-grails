{type:"class",attributes:{"name":"IDecorator","packageName":"qx.ui.decoration","implementations":"qx.ui.decoration.Abstract","fullName":"qx.ui.decoration.IDecorator","type":"interface"},children:[{type:"desc",attributes:{"text":"<p>A decorator is responsible for rendering a widget&#8217;s background and\nborder. It is passed the widget&#8217;s decoration element {@link qx.html.Element}\nand configures it to display the decoration.</p>\n\n<p>To use the decorator first call the {@link #getMarkup} method. This method\nwill return an <span class=\"caps\">HTML</span> fragment containing the decoration. After the decoration\nhas been inserted into the <span class=\"caps\">DOM</span> e.g. by using <code>innerHTML</code> the\n{@link #resize} method must be called to give the decoration the proper size.\nThe first parameter of this call is the root <span class=\"caps\">DOM</span> element of the decoration.\nThe resize call can be repeated as needed.</p>\n\n<p>It is also possible to alter the bakground color of an decoration using the\n{@link #tint} method.</p>"}},{type:"methods",children:[{type:"method",attributes:{"name":"getInsets"},children:[{type:"desc",attributes:{"text":"<p>Get the amount of space, the decoration needs for its border on each\nside.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>the desired insed a map with the keys <code>top</code>,\n    <code>right</code>, <code>bottom</code>, <code>left</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Map"}}]}]}]},{type:"method",attributes:{"name":"getMarkup"},children:[{type:"desc",attributes:{"text":"<p>Returns the basic markup structure used for this decoration.\nThis later updated on <span class=\"caps\">DOM</span> to resize or tint the element.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>Basic markup</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"String"}}]}]}]},{type:"method",attributes:{"name":"resize"},children:[{type:"params",children:[{type:"param",attributes:{"name":"element"},children:[{type:"desc",attributes:{"text":"<p>The element to update</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"qx.html.Element"}}]}]},{type:"param",attributes:{"name":"width"},children:[{type:"desc",attributes:{"text":"<p>Width of the element</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Integer"}}]}]},{type:"param",attributes:{"name":"height"},children:[{type:"desc",attributes:{"text":"<p>Height of the element</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Integer"}}]}]}]},{type:"desc",attributes:{"text":"<p>Resizes the element respecing the configured borders\nto the given width and height. Should automatically\nrespect the box model of the client to correctly\ncompute the dimensions.</p>"}}]},{type:"method",attributes:{"name":"tint"},children:[{type:"params",children:[{type:"param",attributes:{"name":"element"},children:[{type:"desc",attributes:{"text":"<p>The element to update</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"qx.html.Element"}}]}]},{type:"param",attributes:{"name":"bgcolor"},children:[{type:"desc",attributes:{"text":"<p>The color to apply or <code>null</code></p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Color"}}]}]}]},{type:"desc",attributes:{"text":"<p>Applies the given background color to the element\nor fallback to the background color defined\nby the decoration itself.</p>"}}]}]}]}