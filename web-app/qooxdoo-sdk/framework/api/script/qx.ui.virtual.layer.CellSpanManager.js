{type:"class",attributes:{"name":"CellSpanManager","hasWarning":"true","packageName":"qx.ui.virtual.layer","superClass":"qx.core.Object","fullName":"qx.ui.virtual.layer.CellSpanManager","type":"class"},children:[{type:"desc",attributes:{"text":"<p><span class=\"caps\">EXPERIMENTAL</span>!</p>\n\n<p>The CellSpanManager manages cells, which span several rows or columns.</p>\n\n<p>It provides functionality to compute, which spanning cells are visible\nin a given view port and how they have to be placed.</p>"}},{type:"constructor",children:[{type:"method",attributes:{"overriddenFrom":"qx.core.Object","isCtor":"true","name":"ctor"},children:[{type:"params",children:[{type:"param",attributes:{"name":"rowConfig"},children:[{type:"desc",attributes:{"text":"<p>The row configuration of the pane\n   in which the cells will be rendered</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"qx.ui.virtual.core.Axis"}}]}]},{type:"param",attributes:{"name":"columnConfig"},children:[{type:"desc",attributes:{"text":"<p>The column configuration of the pane\n   in which the cells will be rendered</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"qx.ui.virtual.core.Axis"}}]}]}]}]}]},{type:"methods",children:[{type:"method",attributes:{"access":"private","hasError":"true","name":"__intersectionAsArray"},children:[{type:"params",children:[{type:"param",attributes:{"name":"setA"}},{type:"param",attributes:{"name":"setB"}}]},{type:"errors",children:[{type:"error",attributes:{"msg":"Parameter <code>setA</code> is not documented.","column":"23","line":"228"}},{type:"error",attributes:{"msg":"Parameter <code>setB</code> is not documented.","column":"23","line":"228"}},{type:"error",attributes:{"msg":"Documentation is missing.","column":"23","line":"228"}}]}]},{type:"method",attributes:{"access":"protected","name":"_findCellsInRange"},children:[{type:"params",children:[{type:"param",attributes:{"name":"key"},children:[{type:"desc",attributes:{"text":"<p>The key to search for</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"String"}}]}]},{type:"param",attributes:{"name":"min"},children:[{type:"desc",attributes:{"text":"<p>minimum value</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Integer"}}]}]},{type:"param",attributes:{"name":"max"},children:[{type:"desc",attributes:{"text":"<p>maximum value (inclusive)</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Integer"}}]}]}]},{type:"desc",attributes:{"text":"<p>Finds all cells with a sort key within the given range.</p>\n\n<p>Complexity: O(log n)</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>Map, which will contain the search results</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Map"}}]}]}]},{type:"method",attributes:{"access":"protected","name":"_getColumnPosition"},children:[{type:"params",children:[{type:"param",attributes:{"name":"column"},children:[{type:"desc",attributes:{"text":"<p>The column index</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Integer"}}]}]}]},{type:"desc",attributes:{"text":"<p>Get the pixel start position of the given column</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>The pixel start position of the given column</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Integer"}}]}]}]},{type:"method",attributes:{"access":"protected","name":"_getRowPosition"},children:[{type:"params",children:[{type:"param",attributes:{"name":"row"},children:[{type:"desc",attributes:{"text":"<p>The row index</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Integer"}}]}]}]},{type:"desc",attributes:{"text":"<p>Get the pixel start position of the given row</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>The pixel start position of the given row</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Integer"}}]}]}]},{type:"method",attributes:{"access":"protected","name":"_getSingleCellBounds"},children:[{type:"params",children:[{type:"param",attributes:{"name":"cell"},children:[{type:"desc",attributes:{"text":"<p>the cell description as returned by\n   {@link #findCellsInWindow} to get the bounds for</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Map"}}]}]},{type:"param",attributes:{"name":"firstVisibleRow"},children:[{type:"desc",attributes:{"text":"<p>The pane&#8217;s first visible row</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Map"}}]}]},{type:"param",attributes:{"name":"firstVisibleColumn"},children:[{type:"desc",attributes:{"text":"<p>The pane&#8217;s first visible column</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Map"}}]}]}]},{type:"desc",attributes:{"text":"<p>Get the bounds of a single cell</p>"}}]},{type:"method",attributes:{"access":"protected","name":"_getSortedCells"},children:[{type:"params",children:[{type:"param",attributes:{"name":"key"},children:[{type:"desc",attributes:{"text":"<p>The sort key. One of <code>firstRow</code>,\n    <code>lastRow</code>, <code>firstColumn</code> or <code>lastColumn</code></p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"String"}}]}]}]},{type:"desc",attributes:{"text":"<p>Get the cell array sorted by the given key (ascending)</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>sorted array of cell descriptions</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Map","dimensions":"1"}}]}]}]},{type:"method",attributes:{"access":"protected","name":"_invalidatePositionCache"},children:[{type:"desc",attributes:{"text":"<p>Invalidates the row/column position cache</p>"}}]},{type:"method",attributes:{"access":"protected","name":"_invalidateSortCache"},children:[{type:"desc",attributes:{"text":"<p>Invalidate the sort cache</p>"}}]},{type:"method",attributes:{"access":"protected","name":"_onColumnConfigChange"},children:[{type:"params",children:[{type:"param",attributes:{"name":"e"},children:[{type:"desc",attributes:{"text":"<p>the event object</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"qx.event.type.Event"}}]}]}]},{type:"desc",attributes:{"text":"<p>Event handler for column configuration changes</p>"}}]},{type:"method",attributes:{"access":"protected","name":"_onRowConfigChange"},children:[{type:"params",children:[{type:"param",attributes:{"name":"e"},children:[{type:"desc",attributes:{"text":"<p>the event object</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"qx.event.type.Event"}}]}]}]},{type:"desc",attributes:{"text":"<p>Event handler for row configuration changes</p>"}}]},{type:"method",attributes:{"name":"addCell"},children:[{type:"params",children:[{type:"param",attributes:{"name":"id"},children:[{type:"desc",attributes:{"text":"<p>Unique id for the cell definition. This id is required\n   for removing the cell from the manager</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"String"}}]}]},{type:"param",attributes:{"name":"row"},children:[{type:"desc",attributes:{"text":"<p>The cell&#8217;s row</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"PositiveInteger"}}]}]},{type:"param",attributes:{"name":"column"},children:[{type:"desc",attributes:{"text":"<p>The cell&#8217;s column</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"PositiveInteger"}}]}]},{type:"param",attributes:{"name":"rowSpan"},children:[{type:"desc",attributes:{"text":"<p>The number of rows the cells spans</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"PositiveInteger"}}]}]},{type:"param",attributes:{"name":"columnSpan"},children:[{type:"desc",attributes:{"text":"<p>The number of columns the cells spans</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"PositiveInteger"}}]}]}]},{type:"desc",attributes:{"text":"<p>Add a spanning cell to the manager.</p>"}}]},{type:"method",attributes:{"hasError":"true","name":"computeCellSpanMap"},children:[{type:"params",children:[{type:"param",attributes:{"name":"cells"},children:[{type:"desc",attributes:{"text":"<p>Array of cell descriptions as returned by\n    {@link findCellsInWindow}.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Map","dimensions":"1"}}]}]},{type:"param",attributes:{"name":"firstRow"},children:[{type:"desc",attributes:{"text":"<p>first visible row</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"PositiveInteger"}}]}]},{type:"param",attributes:{"name":"firstColumn"},children:[{type:"desc",attributes:{"text":"<p>first visible column</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"PositiveInteger"}}]}]},{type:"param",attributes:{"name":"rowCount"},children:[{type:"desc",attributes:{"text":"<p>number of rows in the window</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"PositiveInteger"}}]}]},{type:"param",attributes:{"name":"columnCount"},children:[{type:"desc",attributes:{"text":"<p>number of columns in the window</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"PositiveInteger"}}]}]}]},{type:"desc",attributes:{"text":"<p>Compute a bitmap, which marks for each visible cell, whether the cell\nis covered by a spanning cell.</p>"}},{type:"errors",children:[{type:"error",attributes:{"msg":"Contains information for a non-existing parameter <code>lastRow</code>.","column":"20","line":"381"}}]},{type:"return",children:[{type:"desc",attributes:{"text":"<p>Two dimensional array, which contains a <code>1</code>\n   for each visible cell, which is covered by a spanned cell.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Map","dimensions":"2"}}]}]}]},{type:"method",attributes:{"name":"findCellsInWindow"},children:[{type:"params",children:[{type:"param",attributes:{"name":"firstRow"},children:[{type:"desc",attributes:{"text":"<p>first visible row</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"PositiveInteger"}}]}]},{type:"param",attributes:{"name":"firstColumn"},children:[{type:"desc",attributes:{"text":"<p>first visible column</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"PositiveInteger"}}]}]},{type:"param",attributes:{"name":"rowCount"},children:[{type:"desc",attributes:{"text":"<p>number of rows in the window</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"PositiveInteger"}}]}]},{type:"param",attributes:{"name":"columnCount"},children:[{type:"desc",attributes:{"text":"<p>number of columns in the window</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"PositiveInteger"}}]}]}]},{type:"desc",attributes:{"text":"<p>Find all cells, which are visible in the given grid window.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>The array of found cell descriptions. A cell description\n   contains the keys <code>firstRow</code>, <code>lastRow</code>,\n   <code>firstColumn</code> or <code>lastColumn</code></p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Map","dimensions":"1"}}]}]}]},{type:"method",attributes:{"name":"getCellBounds"},children:[{type:"params",children:[{type:"param",attributes:{"name":"cells"},children:[{type:"desc",attributes:{"text":"<p>Array of cell descriptions</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Map","dimensions":"1"}}]}]},{type:"param",attributes:{"name":"firstVisibleRow"},children:[{type:"desc",attributes:{"text":"<p>The pane&#8217;s first visible row</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Map"}}]}]},{type:"param",attributes:{"name":"firstVisibleColumn"},children:[{type:"desc",attributes:{"text":"<p>The pane&#8217;s first visible column</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Map"}}]}]}]},{type:"desc",attributes:{"text":"<p>Get the bounds of a list of cells as returned by {@link findCellsInWindow}</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>Array, which contains a bounds map for each cell.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Map","dimensions":"1"}}]}]}]},{type:"method",attributes:{"name":"removeCell"},children:[{type:"params",children:[{type:"param",attributes:{"name":"id"},children:[{type:"desc",attributes:{"text":"<p>The id of the cell to remove</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"String"}}]}]}]},{type:"desc",attributes:{"text":"<p>Remove a cell from the manager</p>"}}]}]}]}