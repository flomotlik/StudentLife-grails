{type:"class",attributes:{"name":"PartLoader","packageName":"qx.io2","superClass":"qx.core.Object","isSingleton":"true","fullName":"qx.io2.PartLoader","type":"class"},children:[{type:"desc",attributes:{"text":"<p>The part loader knows about all generated packages and parts.</p>\n\n<p>It contains functionality to load parts and to retrieve part instances.</p>"}},{type:"constructor",children:[{type:"method",attributes:{"docFrom":"qx.core.Object","overriddenFrom":"qx.core.Object","isCtor":"true","name":"ctor"}}]},{type:"events",children:[{type:"event",attributes:{"name":"partLoaded"},children:[{type:"desc",attributes:{"text":"<p>Fired if a parts was loaded. The {@link qx.event.type.Data#data} property\nof the event instance point to the loaded part instance.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"qx.event.type.Data"}}]}]}]},{type:"methods-static",children:[{type:"method",attributes:{"isStatic":"true","name":"getInstance"},children:[{type:"desc",attributes:{"text":"<p>Returns a singleton instance of this class. On the first call the class\nis instantiated by calling the constructor with no arguments. All following\ncalls will return this instance.</p>\n\n<p>This method has been added by setting the &#8220;type&#8221; key in the class definition\n({@link qx.Class#define}) to &#8220;singleton&#8221;.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>The singleton instance of this class.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"qx.io2.PartLoader"}}]}]}]},{type:"method",attributes:{"isStatic":"true","name":"require"},children:[{type:"params",children:[{type:"param",attributes:{"name":"partNames"},children:[{type:"desc",attributes:{"text":"<p>List of parts namesto load as defined in the\n   config file at compile time.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"String","dimensions":"1"}}]}]},{type:"param",attributes:{"name":"callback"},children:[{type:"desc",attributes:{"text":"<p>Function to execute on completion</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Function"}}]}]},{type:"param",attributes:{"defaultValue":"window","name":"self"},children:[{type:"desc",attributes:{"text":"<p>Context to execute the given function in</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Object"}}]}]}]},{type:"desc",attributes:{"text":"<p>Loads one or more parts asynchronously. The callback is called after all\nparts and their dependencies are fully loaded. If the parts are already\nloaded the callback is called immediately.</p>"}}]}]},{type:"methods",children:[{type:"method",attributes:{"access":"protected","name":"_decodeUris"},children:[{type:"params",children:[{type:"param",attributes:{"name":"compressedUris"},children:[{type:"desc",attributes:{"text":"<p>Array of compressed URIs</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"String","dimensions":"1"}}]}]}]},{type:"desc",attributes:{"text":"<p>Decodes a list of source URIs. The function is defined in the loader\nscript.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>decompressed URIs</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"String","dimensions":"1"}}]}]}]},{type:"method",attributes:{"access":"protected","name":"_getUris"},children:[{type:"desc",attributes:{"text":"<p>Get the <span class=\"caps\">URI</span> lists of all packages</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>Array of <span class=\"caps\">URI</span> lists for each package</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"String","dimensions":"2"}}]}]}]},{type:"method",attributes:{"name":"getPart"},children:[{type:"params",children:[{type:"param",attributes:{"name":"name"},children:[{type:"desc",attributes:{"text":"<p>Name of the part as defined in the config file at\n   compile time.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"String"}}]}]}]},{type:"desc",attributes:{"text":"<p>Get the part instance of the part with the given name.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>The corresponding part instance</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Part"}}]}]}]},{type:"method",attributes:{"name":"require"},children:[{type:"params",children:[{type:"param",attributes:{"name":"partNames"},children:[{type:"desc",attributes:{"text":"<p>List of parts names to load as defined\n   in the config file at compile time. The method also accepts a single\n   string as parameter to only load one part.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"String"}},{type:"entry",attributes:{"type":"String","dimensions":"1"}}]}]},{type:"param",attributes:{"name":"callback"},children:[{type:"desc",attributes:{"text":"<p>Function to execute on completion</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Function"}}]}]},{type:"param",attributes:{"defaultValue":"window","name":"self"},children:[{type:"desc",attributes:{"text":"<p>Context to execute the given function in</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Object"}}]}]}]},{type:"desc",attributes:{"text":"<p>Loads one or more parts asynchronously. The callback is called after all\nparts and their dependencies are fully loaded. If the parts are already\nloaded the callback is called immediately.</p>"}}]}]}]}