{type:"class",attributes:{"name":"MPlacement","packageName":"qx.ui.core","includer":"qx.ui.core.DragDropCursor,qx.ui.menu.Menu,qx.ui.popup.Popup","fullName":"qx.ui.core.MPlacement","type":"mixin"},children:[{type:"desc",attributes:{"text":"<p>Methods to place popup like widgets to other widgets, points,\nmouse event coordinates, etc.</p>"}},{type:"methods",children:[{type:"method",attributes:{"access":"private","isMixin":"true","name":"__place"},children:[{type:"params",children:[{type:"param",attributes:{"name":"coords"},children:[{type:"desc",attributes:{"text":"<p>Location of the object to align the this to. This map\n  should have the keys <code>left</code>, <code>top</code>, <code>right</code>\n  and <code>bottom</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Map"}}]}]}]},{type:"desc",attributes:{"text":"<p>Internal method to read specific this properties and\napply the results to the this afterwards.</p>"}}]},{type:"method",attributes:{"name":"getDomMove","fromProperty":"domMove"},children:[{type:"desc",attributes:{"text":"<p>Returns the (computed) value of the property <code>domMove</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #domMove}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>(Computed) value of <code>domMove</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"isMixin":"true","name":"getLayoutLocation"},children:[{type:"params",children:[{type:"param",attributes:{"name":"widget"},children:[{type:"desc",attributes:{"text":"<p>Any widget</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"qx.ui.core.Widget"}}]}]}]},{type:"desc",attributes:{"text":"<p>Returns the location data like {qx.bom.element.Location#get} does,\nbut does not rely on <span class=\"caps\">DOM</span> elements coordinatess to be rendered. Instead,\nthis method works with the available layout data available in the moment\nwhen it is executed.\nThis works best when called in some type of <code>resize</code> or\n<code>move</code> event which are supported by all widgets out of the\nbox.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>Returns a map with <code>left</code>, <code>top</code>,\n  <code>right</code> and <code>bottom</code> which contains the distance\n  of the widget relative coords the document.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Map"}}]}]}]},{type:"method",attributes:{"name":"getOffsetBottom","fromProperty":"offsetBottom"},children:[{type:"desc",attributes:{"text":"<p>Returns the (computed) value of the property <code>offsetBottom</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #offsetBottom}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>(Computed) value of <code>offsetBottom</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"name":"getOffsetLeft","fromProperty":"offsetLeft"},children:[{type:"desc",attributes:{"text":"<p>Returns the (computed) value of the property <code>offsetLeft</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #offsetLeft}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>(Computed) value of <code>offsetLeft</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"name":"getOffsetRight","fromProperty":"offsetRight"},children:[{type:"desc",attributes:{"text":"<p>Returns the (computed) value of the property <code>offsetRight</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #offsetRight}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>(Computed) value of <code>offsetRight</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"name":"getOffsetTop","fromProperty":"offsetTop"},children:[{type:"desc",attributes:{"text":"<p>Returns the (computed) value of the property <code>offsetTop</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #offsetTop}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>(Computed) value of <code>offsetTop</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"name":"getPlaceMethod","fromProperty":"placeMethod"},children:[{type:"desc",attributes:{"text":"<p>Returns the (computed) value of the property <code>placeMethod</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #placeMethod}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>(Computed) value of <code>placeMethod</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"name":"getPosition","fromProperty":"position"},children:[{type:"desc",attributes:{"text":"<p>Returns the (computed) value of the property <code>position</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #position}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>(Computed) value of <code>position</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"name":"getSmart","fromProperty":"smart"},children:[{type:"desc",attributes:{"text":"<p>Returns the (computed) value of the property <code>smart</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #smart}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>(Computed) value of <code>smart</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"access":"protected","name":"initDomMove","fromProperty":"domMove"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>Initial value for property <code>domMove</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"desc",attributes:{"text":"<p>Calls the apply method and dispatches the change event of the property <code>domMove</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #domMove}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>the default value</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"access":"protected","name":"initOffsetBottom","fromProperty":"offsetBottom"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>Initial value for property <code>offsetBottom</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"desc",attributes:{"text":"<p>Calls the apply method and dispatches the change event of the property <code>offsetBottom</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #offsetBottom}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>the default value</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"access":"protected","name":"initOffsetLeft","fromProperty":"offsetLeft"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>Initial value for property <code>offsetLeft</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"desc",attributes:{"text":"<p>Calls the apply method and dispatches the change event of the property <code>offsetLeft</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #offsetLeft}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>the default value</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"access":"protected","name":"initOffsetRight","fromProperty":"offsetRight"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>Initial value for property <code>offsetRight</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"desc",attributes:{"text":"<p>Calls the apply method and dispatches the change event of the property <code>offsetRight</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #offsetRight}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>the default value</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"access":"protected","name":"initOffsetTop","fromProperty":"offsetTop"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>Initial value for property <code>offsetTop</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"desc",attributes:{"text":"<p>Calls the apply method and dispatches the change event of the property <code>offsetTop</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #offsetTop}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>the default value</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"access":"protected","name":"initPlaceMethod","fromProperty":"placeMethod"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>Initial value for property <code>placeMethod</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"desc",attributes:{"text":"<p>Calls the apply method and dispatches the change event of the property <code>placeMethod</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #placeMethod}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>the default value</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"access":"protected","name":"initPosition","fromProperty":"position"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>Initial value for property <code>position</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"desc",attributes:{"text":"<p>Calls the apply method and dispatches the change event of the property <code>position</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #position}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>the default value</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"access":"protected","name":"initSmart","fromProperty":"smart"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>Initial value for property <code>smart</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"desc",attributes:{"text":"<p>Calls the apply method and dispatches the change event of the property <code>smart</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #smart}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>the default value</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"name":"isDomMove","fromProperty":"domMove"},children:[{type:"desc",attributes:{"text":"<p>Check whether the (computed) value of the boolean property <code>domMove</code> equals <code>true</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #domMove}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>Whether the property equals <code>true</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Boolean"}}]}]}]},{type:"method",attributes:{"name":"isSmart","fromProperty":"smart"},children:[{type:"desc",attributes:{"text":"<p>Check whether the (computed) value of the boolean property <code>smart</code> equals <code>true</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #smart}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>Whether the property equals <code>true</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Boolean"}}]}]}]},{type:"method",attributes:{"isMixin":"true","name":"moveTo"},children:[{type:"params",children:[{type:"param",attributes:{"name":"left"},children:[{type:"desc",attributes:{"text":"<p>The left position</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Integer"}}]}]},{type:"param",attributes:{"name":"top"},children:[{type:"desc",attributes:{"text":"<p>The top position</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Integer"}}]}]}]},{type:"desc",attributes:{"text":"<p>Sets the position. Uses low-level, high-performance <span class=\"caps\">DOM</span>\nmethods when the property {@link #domMove} is enabled.</p>"}}]},{type:"method",attributes:{"isMixin":"true","name":"placeToElement"},children:[{type:"params",children:[{type:"param",attributes:{"name":"elem"},children:[{type:"desc",attributes:{"text":"<p><span class=\"caps\">DOM</span> element to align to</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Element"}}]}]},{type:"param",attributes:{"name":"liveupdate"},children:[{type:"desc",attributes:{"text":"<p>Flag indicating if the position of the\nwidget should be checked and corrected automatically.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Boolean"}}]}]}]},{type:"desc",attributes:{"text":"<p>Places the widget to any (rendered) <span class=\"caps\">DOM</span> element.</p>"}}]},{type:"method",attributes:{"isMixin":"true","name":"placeToMouse"},children:[{type:"params",children:[{type:"param",attributes:{"name":"event"},children:[{type:"desc",attributes:{"text":"<p>Mouse event to align to</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"qx.event.type.Mouse"}}]}]}]},{type:"desc",attributes:{"text":"<p>Places the widget to the mouse cursor position.</p>"}}]},{type:"method",attributes:{"isMixin":"true","name":"placeToPoint"},children:[{type:"params",children:[{type:"param",attributes:{"name":"point"},children:[{type:"desc",attributes:{"text":"<p>Coordinate of any point with the keys <code>left</code>\n  and <code>top</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Map"}}]}]}]},{type:"desc",attributes:{"text":"<p>Places the widget in relation to the given point</p>"}}]},{type:"method",attributes:{"isMixin":"true","name":"placeToWidget"},children:[{type:"params",children:[{type:"param",attributes:{"name":"target"},children:[{type:"desc",attributes:{"text":"<p>Target coords align coords</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"qx.ui.core.Widget"}}]}]},{type:"param",attributes:{"name":"liveupdate"},children:[{type:"desc",attributes:{"text":"<p>Flag indicating if the position of the\nwidget should be checked and corrected automatically.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Boolean"}}]}]}]},{type:"desc",attributes:{"text":"<p>Places the widget to another (at least laid out) widget. The <span class=\"caps\">DOM</span>\nelement is not needed, but the bounds are needed to compute the\nlocation of the widget to align to.</p>"}}]},{type:"method",attributes:{"name":"resetDomMove","fromProperty":"domMove"},children:[{type:"desc",attributes:{"text":"<p>Resets the user value of the property <code>domMove</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #domMove}.</p>"}},{type:"return",children:[{type:"types",children:[{type:"entry",attributes:{"type":"void"}}]}]}]},{type:"method",attributes:{"name":"resetOffset","fromProperty":"offset"},children:[{type:"desc",attributes:{"text":"<p>Resets the user value of the property <code>offset</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #offset}.</p>"}},{type:"return",children:[{type:"types",children:[{type:"entry",attributes:{"type":"void"}}]}]}]},{type:"method",attributes:{"name":"resetOffsetBottom","fromProperty":"offsetBottom"},children:[{type:"desc",attributes:{"text":"<p>Resets the user value of the property <code>offsetBottom</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #offsetBottom}.</p>"}},{type:"return",children:[{type:"types",children:[{type:"entry",attributes:{"type":"void"}}]}]}]},{type:"method",attributes:{"name":"resetOffsetLeft","fromProperty":"offsetLeft"},children:[{type:"desc",attributes:{"text":"<p>Resets the user value of the property <code>offsetLeft</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #offsetLeft}.</p>"}},{type:"return",children:[{type:"types",children:[{type:"entry",attributes:{"type":"void"}}]}]}]},{type:"method",attributes:{"name":"resetOffsetRight","fromProperty":"offsetRight"},children:[{type:"desc",attributes:{"text":"<p>Resets the user value of the property <code>offsetRight</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #offsetRight}.</p>"}},{type:"return",children:[{type:"types",children:[{type:"entry",attributes:{"type":"void"}}]}]}]},{type:"method",attributes:{"name":"resetOffsetTop","fromProperty":"offsetTop"},children:[{type:"desc",attributes:{"text":"<p>Resets the user value of the property <code>offsetTop</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #offsetTop}.</p>"}},{type:"return",children:[{type:"types",children:[{type:"entry",attributes:{"type":"void"}}]}]}]},{type:"method",attributes:{"name":"resetPlaceMethod","fromProperty":"placeMethod"},children:[{type:"desc",attributes:{"text":"<p>Resets the user value of the property <code>placeMethod</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #placeMethod}.</p>"}},{type:"return",children:[{type:"types",children:[{type:"entry",attributes:{"type":"void"}}]}]}]},{type:"method",attributes:{"name":"resetPosition","fromProperty":"position"},children:[{type:"desc",attributes:{"text":"<p>Resets the user value of the property <code>position</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #position}.</p>"}},{type:"return",children:[{type:"types",children:[{type:"entry",attributes:{"type":"void"}}]}]}]},{type:"method",attributes:{"name":"resetSmart","fromProperty":"smart"},children:[{type:"desc",attributes:{"text":"<p>Resets the user value of the property <code>smart</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #smart}.</p>"}},{type:"return",children:[{type:"types",children:[{type:"entry",attributes:{"type":"void"}}]}]}]},{type:"method",attributes:{"name":"setDomMove","fromProperty":"domMove"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>New value for property <code>domMove</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"desc",attributes:{"text":"<p>Sets the user value of the property <code>domMove</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #domMove}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>The unmodified incoming value.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"name":"setOffset","fromProperty":"offset"},children:[{type:"params",children:[{type:"param",attributes:{"name":"offsetTop"},children:[{type:"desc",attributes:{"text":"<p>Sets the value of the property {@link #offsetTop}.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]},{type:"param",attributes:{"name":"offsetRight"},children:[{type:"desc",attributes:{"text":"<p>Sets the value of the property {@link #offsetRight}.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]},{type:"param",attributes:{"name":"offsetBottom"},children:[{type:"desc",attributes:{"text":"<p>Sets the value of the property {@link #offsetBottom}.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]},{type:"param",attributes:{"name":"offsetLeft"},children:[{type:"desc",attributes:{"text":"<p>Sets the value of the property {@link #offsetLeft}.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"desc",attributes:{"text":"<p>Sets the values of the property group <code>offset</code>.</p>\n\n<p>This setter supports a shorthand mode compatible with the way margins and paddins are set in <span class=\"caps\">CSS</span>.</p>\n\n<p>For further details take a look at the property definition: {@link #offset}.</p>"}}]},{type:"method",attributes:{"name":"setOffsetBottom","fromProperty":"offsetBottom"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>New value for property <code>offsetBottom</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"desc",attributes:{"text":"<p>Sets the user value of the property <code>offsetBottom</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #offsetBottom}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>The unmodified incoming value.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"name":"setOffsetLeft","fromProperty":"offsetLeft"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>New value for property <code>offsetLeft</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"desc",attributes:{"text":"<p>Sets the user value of the property <code>offsetLeft</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #offsetLeft}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>The unmodified incoming value.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"name":"setOffsetRight","fromProperty":"offsetRight"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>New value for property <code>offsetRight</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"desc",attributes:{"text":"<p>Sets the user value of the property <code>offsetRight</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #offsetRight}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>The unmodified incoming value.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"name":"setOffsetTop","fromProperty":"offsetTop"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>New value for property <code>offsetTop</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"desc",attributes:{"text":"<p>Sets the user value of the property <code>offsetTop</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #offsetTop}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>The unmodified incoming value.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"name":"setPlaceMethod","fromProperty":"placeMethod"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>New value for property <code>placeMethod</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"desc",attributes:{"text":"<p>Sets the user value of the property <code>placeMethod</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #placeMethod}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>The unmodified incoming value.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"name":"setPosition","fromProperty":"position"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>New value for property <code>position</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"desc",attributes:{"text":"<p>Sets the user value of the property <code>position</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #position}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>The unmodified incoming value.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"name":"setSmart","fromProperty":"smart"},children:[{type:"params",children:[{type:"param",attributes:{"name":"value"},children:[{type:"desc",attributes:{"text":"<p>New value for property <code>smart</code>.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"desc",attributes:{"text":"<p>Sets the user value of the property <code>smart</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #smart}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>The unmodified incoming value.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"name":"toggleDomMove","fromProperty":"domMove"},children:[{type:"desc",attributes:{"text":"<p>Toggles the (computed) value of the boolean property <code>domMove</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #domMove}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>the new value</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Boolean"}}]}]}]},{type:"method",attributes:{"name":"toggleSmart","fromProperty":"smart"},children:[{type:"desc",attributes:{"text":"<p>Toggles the (computed) value of the boolean property <code>smart</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #smart}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>the new value</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Boolean"}}]}]}]}]},{type:"properties",children:[{type:"property",attributes:{"defaultValue":"false","propertyType":"new","isMixin":"true","name":"domMove","check":"Boolean"},children:[{type:"desc",attributes:{"text":"<p>Whether the widget should moved using <span class=\"caps\">DOM</span> methods.</p>"}}]},{type:"property",attributes:{"group":"\"offsetTop\",\"offsetRight\",\"offsetBottom\",\"offsetLeft\"","name":"offset","mode":"shorthand","propertyType":"group","isMixin":"true","themeable":"true"},children:[{type:"desc",attributes:{"text":"<p>Offsets in one group</p>"}}]},{type:"property",attributes:{"name":"offsetBottom","defaultValue":"0","propertyType":"new","isMixin":"true","check":"Integer","themeable":"true"},children:[{type:"desc",attributes:{"text":"<p>Bottom offset of the mouse pointer (in pixel)</p>"}}]},{type:"property",attributes:{"name":"offsetLeft","defaultValue":"0","propertyType":"new","isMixin":"true","check":"Integer","themeable":"true"},children:[{type:"desc",attributes:{"text":"<p>Left offset of the mouse pointer (in pixel)</p>"}}]},{type:"property",attributes:{"name":"offsetRight","defaultValue":"0","propertyType":"new","isMixin":"true","check":"Integer","themeable":"true"},children:[{type:"desc",attributes:{"text":"<p>Right offset of the mouse pointer (in pixel)</p>"}}]},{type:"property",attributes:{"name":"offsetTop","defaultValue":"0","propertyType":"new","isMixin":"true","check":"Integer","themeable":"true"},children:[{type:"desc",attributes:{"text":"<p>Top offset of the mouse pointer (in pixel)</p>"}}]},{type:"property",attributes:{"name":"placeMethod","defaultValue":"\"mouse\"","propertyType":"new","possibleValues":"\"widget\",\"mouse\"","isMixin":"true","themeable":"true"},children:[{type:"desc",attributes:{"text":"<p>Whether the widget should be placed relative to an other widget or to\nthe mouse cursor.</p>"}}]},{type:"property",attributes:{"name":"position","defaultValue":"\"bottom-left\"","propertyType":"new","possibleValues":"\"top-left\",\"top-right\",\"bottom-left\",\"bottom-right\",\"left-top\",\"left-bottom\",\"right-top\",\"right-bottom\"","isMixin":"true","themeable":"true"},children:[{type:"desc",attributes:{"text":"<p>Position of the aligned object in relation to the opener.</p>\n\n<p>Please note than changes to this property are only applied\nwhen re-aligning the widget.</p>\n\n<p>The first part of the value is the edge to attach to. The second\npart the alignment of the orthogonal edge after the widget\nhas been attached.</p>\n\n<p>The default value &#8220;bottom-left&#8221; for example means that the\nwidget should be shown directly under the given target and\nthen should be aligned to be left edge:</p>\n\n<pre>\n+--------+\n| target |\n+--------+\n+-------------+\n|   widget    |\n+-------------+\n</pre>"}}]},{type:"property",attributes:{"name":"smart","defaultValue":"true","propertyType":"new","isMixin":"true","check":"Boolean","themeable":"true"},children:[{type:"desc",attributes:{"text":"<p>Whether the widget should be positioned in the most\noptimal way e.g. try to keep it visible.</p>"}}]}]}]}